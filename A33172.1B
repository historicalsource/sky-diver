;15-MAR-78
	.TITLE	SPLAT3
	.SBTTL	PAGE 0 EQUATES
;SKY DIVER
	.ASECT
	.RADIX	16
	.GLOBL	C2,DP
	.GLOBL	GMSTAT,HISCRH,HISCRL
	.GLOBL	HISCRM,HSCRPL,INWH,IRQ
	.GLOBL	LSBH,LSBV,MSBH,MSBV,NMI,WTTYM
	.GLOBL	OUTWH,CNFLG,P0H
	.GLOBL	P0HPOS,P0P,P0PIC,P0V,P0VPOS
	.GLOBL	RTC,R0,R1,R2,R3,R4,R5,R6,R7,R8
	.GLOBL	SCORE1,SCORE2,START,STAT
;FOR COIN ROUTINE
	.GLOBL	CNSTAT,CPIPE1,CPIPE2,SLAMSW
	.GLOBL	SLMBIT,COINCT,STRTIM
	.GLOBL	CMODE,CONTST
	.GLOBL	CREDIT
	.GLOBL	COINSW,COIN68,PRESLM
	.GLOBL	OFFSET,NMINUM
;
;MUSIC CONTROL WORDS
;
	.GLOBL	CLRAREA,TEMPO,LTEMPO,PAUSE,LPAUSE,MEASURE
	.GLOBL	LMEASURE,CNTRL,NOTE,LEN,COUNTER,HPTR,LPTR
	.GLOBL	CHORD,CHAN,OCTAVE,IRQTMP,EBASE
	.GLOBL	BACH,FLASH1,FLASH2,STRETCH,INTCOM,CHAN0,CHAN1
	.GLOBL	OCTL,NOTEL
;
;DIAG NEEDED WORDS
;
	.GLOBL	CLR2,IRQ,RTC,SNDOUT,NONMI,WISTL1,OFFSET
	.GLOBL	DIAG,DIAGS,VBLANK
	.=0000
FLAG:	.BLKB	1		;GENERAL'S FLAG
TIX:	.BLKB	2		;A TIX!
NOTUSED:.BLKB	2		;NOT USED!
CRWDL:	.BLKB	1		;CROWD TIMER
CHANGE:	.BLKB	1		;SCREEN CHANGE
OLDCRD:	.BLKB	1		;OLD CREDIT COMPARE
TMODE:	.BLKB	1		;TIME MODE
SIREN:	.BLKB	4		;SIREN WORDS
SIRD	=SIREN+1		;OFF DELAY
POLY:	.BLKB	1		;A RANDOM NUMBER
NMITIX:	.BLKB 2		;....... NOT USED .........
P0HPOS:	.BLKB	4		;H 10-13
MOTOR:	.BLKB	4		;M 14-17
OCTL	=MOTOR
NOTEL	=MOTOR+1
SNDOUT	=MOTOR+2
P0VPOS:	.BLKB	8		;V 18-1E
P0PIC	=P0VPOS+1		;PIC
R0:	.BLKB	1		;C(P#X2)+2 AS AN IX
R1:	.BLKB	1		;----------
R2:	.BLKB	1
R3:	.BLKB	1
R4:	.BLKB	1		;ALLOWS R5 TO BE USED AS AN IX
R5:	.BLKB	1		;P#
R6:	.BLKB	1		;(P#X4)+4 AS AN IX
R7:	.BLKB	1		;----------
R8:	.BLKB	2
RTC:	.BLKB	1		;REAL?  TIME CLOCK
P0H:	.BLKB	20.		;FIRST 12 ARE HMSB&LSB OF MOTION OBJECTS
VEL	=P0H+12.		;NEXT 6 ARE VEL WORDS FOR PLANES AND DIVERS
P0V:	.BLKB	1		;VLSB=P0V, PIC=P0V+1, VMSB=P0V+2
STAT	=P0V+3			;WHERE STAT LIES (P0V+3)
P0P:	.BLKB	23.		;24 BYTES (P0V ABOVE TOO)=4*6 MOTION OBJS
LSBH:	.BLKB	1		;TEMP CELLS USED IN MOVE ABOVE
MSBH:	.BLKB	1
LSBV:	.BLKB	1
MSBV:	.BLKB	1
C2:	.BLKB	1		;SOUND CELL2 (ALSO ACTIVE PLAYER FLAG)
INWH:	.BLKB	2		;INPUT IX FOR MESSAGE
OUTWH:	.BLKB	2		;OUTPUT POINTER
WTTYM:	.BLKB	1		;WAIT TIMER
ATTYM:	.BLKB	1		;ATTRACT TIMER
GMSTAT:	.BLKB 1		;GAME STATUS
FREEZ:	.BLKB 1		;ATTRACT FREEZE
;BLACK IS NOW WHITE & WHITE IS BLACK
;BUT DON'T LET IT CONFUSE YOU
WTS1:	.BLKB	1		;TARGET SCORES
WTS2:	.BLKB	1		;WHERE IT GOES
BTS1:	.BLKB	1		;BLACK SCORES (OR IS THIS WHITE???)
BTS2:	.BLKB	1		;WHERE IT GOES
WINDV:	.BLKB 1		;WIND VELOCITY
FLASH1:	.BLKB 2		;TIMERS FOR FLASHING TARGETS
FLASH2:	.BLKB 2
SCRBUF:	.BLKB 4		;SCORE BUFFER FOR OUTPUT
VSTART  =SCRBUF+1		;START VERTICAL
VELST:	.BLKB 4			;START VELOCITY
WIDTH	=VELST+1		;WIDTH OF DISPLAYED TARGET
LANG:	.BLKB 1		;LANGUAGE
COUNT:	.BLKB 1		;REPEAT COUNT OF CHARS IN DISPLAY ROUTINE
DELAY:  .BLKB 1
TIME:	.BLKB 1		;LATE START TIME
MISSES:	.BLKB 4		;MISSED REMAINING
BONUS	=MISSES+1		;BONUS STATUS WORDS
TMPMIS:	.BLKB 1		;HOLDS NUMBER OF MISSES FROM SWITCHES
SLTR:	.BLKB 1		;SELECT LETTER POINTER
SELECT:	.BLKB 4		;PLAYER'S SELECTED LETTERS
RELES	=SELECT+1		;ONE SHOT ON JUMP BUTTON
;SOUND WORDS FOR NMI
NMINUM:	.BLKB 3
SOUNDL:	.BLKB 1			;CROWD LEVEL
SPLTIX:	.BLKB 2			;SPLAT IX
SPLLEV:	.BLKB 1			;SPLAT LEVEL
SHTTIX: .BLKB 2   		;SHUTE IX
SHTLEV:	.BLKB 1			;SHUTE LEVEL
OCTV:	.BLKB 2
LETO:	.BLKB	1		;OUTPUT LIGHT BYTE
LTNUM:	.BLKB	1		;SEQUENCE #
NXTLT:	.BLKB	2		;LIGHT IX
EXSND:	.BLKB 1			;EXTENDED PLAY SOUND NOTE REGISTER
EXCNT:	.BLKB 1			;EXTENDED PLAY SOUND TIMES COUNT
;MUSIC CONTROL WORDS
;
CLRAREA:
TEMPO:	.BLKB 1		
LTEMPO:	.BLKB	1
PAUSE:	.BLKB 1
LPAUSE:	.BLKB 1
MEASURE:	.BLKB 1
LMEASURE:	.BLKB 1
CNTRL:	.BLKB 1
NOTE:	.BLKB 1
LEN:	.BLKB 1
COUNTER:	.BLKB 1
HPTR:	.BLKB 1
LPTR:	.BLKB 1
CHORD:	.BLKB 1
OCTAVE:	.BLKB 1
IRQTMP:	.BLKB 1
EBASE:
;
;......................................................
;
;COIN ROUTINE WORDS
STRTIM:	.BLKB 2		;STRING TIME
CNSTAT:	.BLKB 2		;STATUS
CPIPE1:	.BLKB 2		;PIPE 1
CPIPE2:	.BLKB 2		;2ND PIPE
PRESLM:	.BLKB 1		;SLAM
COINCT:	.BLKB 1		;COINS
CMODE:	.BLKB 1
HISCRL:	.BLKB	1		;HIGH SCORE
HISCRH:	.BLKB	1
HISCRM:	.BLKB	1		;MSB'S
CREDIT:	.BLKB	1		;CREDIT
EXPST:  .BLKB 3    		;EX PLAY PLAYER STATUS WORDS
EXPL	=EXPST+1		;EXTENDED PLAY SWITCH STATUS WORD
EXSCR:	.BLKB 1			;EXTEND PLAY LEVEL TO REACH
CNFLG:	.BLKB 1		;EX PLAY COIN RECIEVED FLAG
DP	=0400
STKPTR	=00FF		;STACK POINTER (TEMP PLACE)
STRETCH	=100F		;PLANE STRETCH 
SCORE1	=0408		;SCORE (OUTPUT LOC ALSO)
SCORE2	=041A
HSCRPL	=0472		;HIGH SCORE 'CENTRAL' OUTPUT LOCATION
SKDVB	=0422		;SKYDIVER WORD OUTPUT LOCATIONS
SKDVW	=0434
PEOPL1	=0422
PEOPL2	=0436
MISOT1	=0449
MISOT2	=045B
JLITE1	=1006		;JUMP LIGHTS
JLITE2	=1000		;ADDR=OFF, +1=ON
STLITE	=0804
ATTRACT	=080C		;NO SOUNDS, +1 SOUNDS
WISTL1	=1008		;DROP WISTLES (+1 FOR ON)
WISTL2	=100A
OCTVE	=200A		;DROP WISTLE OCTAVE CHANGE (=HIGH,+1=LOW,+2=#2HIGH,+3=#2LOW)
CROWD	=080E		;CROWD LATCH
;EXPLOSIONS (OF,+1 FOR ON)
NONMI	=100C		;NO NMI, +1 NMI'S ON
UP0	=1800		;LEFT/RIGHT INPUT
JUMP	=1802		;JUMP AND CHUTE 
START1	=1806		;START & COIN SWITCHES
START2	=1807
COINSW  =START1
GMTIM	=1808		;NUMBER OF MISSES
EXPLAY  =180A		;EXTENDED PLAY SWITCHES
VBLANK	=1810
SLAMSW	=1811		;SLAM SWITCHES
SLMBIT  =40			;SLAM BIT
IRQ	=2000			;TIMER RESET
COST1	=1809			;COIN MODE SWITCH
LANGS	=180B
CNLCK	=1002			;LOCKOUT OFF, +1 FOR ON
TSTSW	=1810			;TEST SWITCH
DIAGS	=1804		;DIAG SELECT (BIT7) AND STEP (BIT6) SWITCH
COINM	=0500
;
;********** ??? *** TO BE UPDATED
LOWEND	=0E8
LASTPIC	=05
TWOPIC	=4
GND	=28
COLASP	=GND+11.
TOPLINE	=0760
	.REPT 0

TO ALL MY READERS (CRITICS):
	THE FOLLOWING IS A BRIEF DESCRIPTION OF HOW THE ABOVE MESS WORKS.
	R0 AND R6 ARE IX'S POINTING TO MOTION OBJECT INFO.
	R0 STARTS AT 8 (THIS IS 1 MORE THAN WHERE IT SHOULD POINT)
AND IS DECREMENTED BY 2. THIS ALLOWS A DEX,BNE TO BE USED AS AN END 
INDICATOR. YOU WILL NOTE THAT MUCH OF PAGE 0 IS DIVIDED INTO PAIRS
OF BYTES, 1 FOR EACH PLAYER, FOR A SPECIFIC FUNCTIONS. THESE PAIRS
(IN MOST CASES) ARE DIVIDED BY 1 BYTE. BY LOADING IX WITH R0, AND
KNOWING WHICH MOTION OBJECT IT IS CURRENTLY POINTING T0 (EITHER
PLANE OR DIVER), THE DESIRED INFO MAY BE OBTAINED FOR THE PROPER
PLAYER USING AN LDAA X,INFO-OFFSET, WHERE OFFSET IS DETERMINED
BY WHICH (PLANE OR DIVER) THE IX POINTS TO.
	EX:	WTS1 IS THE WHITE PLAYERS TARGET VALUE.
		IF WE ARE PROCESSING A DIVER (MAN) AND NEED THIS
		INFO, THE FOLLOWING WOULD BE DONE:
			LDX	D,R0
			LDAA	X,WTS1-6
		SINCE R0 HAS EITHER 6 OR 8 WHEN PROCESSING A DIVER.
		IF WE WERE 'DOING' A PLANE, THEN THE 6 WOULD BE A
		2 SINCE R0 WOULD BE EITHER A 2 OR 4.
		NOTE THAT IN THE ABOVE EXAMPLE IF WE WERE DOING THE 
		BLACK PLAYER, THEN THE IX WOULD HAVE BEEN 8 WHICH
		WOULD HAVE LOADED US FROM WTS1+2 WHICH IS SIMPLY
		BTS1, OR THE BLACK PLAYERS TARGET SCORE
		THIS SIMPLY ALLOWS ME TO USE THE SAME ROUTINE FOR BOTH
		PLAYERS SIMPLY BY CHANGING THE VALUE OF R0 AND R6 (BELOW)
	R6 IS SIMILAR TO R0 EXCEPT THAT IT STARTS AT 16 AND DECREMENTS
BY 4. IT'S MAIN USE IS TO OBTAIN INFO ON OBJECT'S STATUS, VERTICAL MSB
AND LSB, AND PICTURE INFO
	HERE, AN LDX D,R6, LDAA X,P0V-2 WOULD GET YOU A PITICULAR
MOTION OBJECT'S STATUS (RECALL WE ARE 1 PAST WHERE IT SHOULD POINT
SO THAT A DEX, BNE CANBE USED TO DETERMIN IF WE ARE DONE WITH ALL
OBJECTS).
	SO YOU ASK, HOW COME R6 DOESN'T START AT 24. SINCE THERE ARE
6 MOTION OBJECTS? WELL, SINCE THE CHUTES (THE LAST OR TOP 2 OBJECTS)
ALWAYS FOLLOW THE DIVER, IT IS VERY SIMPLE TO ACCESS THEIR INFO BY
MAKING THE OFFSET + INSTEAD OF -.
	EX:	WITH R6 POINTING TO A DIVER (12 OR 16), IT'S
CORRESPONDING CHUTE INFO WOULD BE OBTAINED AS FOLLOWS:
		LDAA	X,P0V+3		CHUTE'S STATUS
		LDAA	X,P0V+2		VMSB
		ETC.
NOW, GO BACK AND LOOK AT PAGE 0 AGAIN AND SEE IF YOU ARE NOT COMPLETELY
CONFUSED AS I  WAS WHEN I FIRST GOT THIS  METHOD FROM TOM HOGG!!!
						ORR
	.ENDR
	.PAGE
	.SBTTL	POWER ON & INIT

	.=3000
	.RADIX 16		;NOTHING
CKM1:	.BYTE 0DD
;
;ATTRACT LOOP START HERE
;
ATLP:	STAA	E,NONMI+1
1$:	LDAA	E,TSTSW			;TEST & ALIGNMENT?
	ASLA
	BMI	2$
	JMP	E,DOTEST		;DO TEST
2$:	LDAA	E,LANGS
	ANDA	I,0C0
	CLC
	ROLA
	ROLA
	ROLA
	ROLA			;LANG TIMES 2
	CMPA	D,LANG		;ANY CHANGE?
	BEQ	ATL
	STAA	D,LANG
	JMP	ST2
;
;ATTRACT LIGHT FLASH ROUTINE
;
ATL:	LDAA	D,RTC			;TIME FOR NEXT LIGHT?
	ANDA	I,0F
	BNE	50$			;IF NO, SKIP THIS WHOLE MESS
	LDAB	D,LETO
	LDAA	D,LTNUM		;SEQUENCE 0
	ANDA	I,03
	BNE	10$
	CMPB	I,80			;XOR MSB TO CARRY AND SHIFT INTO LSB
	ROLB
	STAB	D,LETO			;REPLACE INTO DISPLAY WORD
	BNE 	50$			;IF 0, THIS SEQ. IS OVER
	LDAB	I,80			;START NEXT SEQ.
2$:	STAB	D,LETO
1$:	INC	E,LTNUM			;INCREMENT SEQUENCE #
	BRA	50$
10$:	CMPA	I,2		;SEQUENCE 1 & 2
	BGT	20$
11$:	LSRB
12$:	STAB	D,LETO
	BNE	50$
	LDX	I,LTTB			;THIS LAST SEQ. COMES FROM A TABLE
	STX	D,NXTLT
	LDAB	I,0AA
	BRA	2$
20$:
	LDX	D,NXTLT			;GET TABLE POINTER
	LDAB	X,0
	STAB	D,LETO
	BEQ	1$
	INX
	STX	D,NXTLT
50$:
;GET COIN MODE
	LDAA	E,COST1		;COST SWITCH
	ANDA	I,^H0C0
	LDAB	E,GMTIM
	ANDB	I,^H0C0		;READ NUMBER OF MISSES
	CLC
	ROLA			;PUT COST IN BOTTOM 2 BITS
	ROLA
	ROLA
	CMPA	D,CMODE		;CHANGE?
	BEQ	60$
	INC 	E,CHANGE	;YES
	STAA	D,CMODE
	BEQ	60$		;MODE 0 (FREE PLAY)?
	STAA	E,CNLCK+1	;IF NO, ALLOW COINS IN
60$:	CLC		;NOW DO MISSES
	ROLB
	ROLB
	ROLB
	ADDB	I,3	;NUMBER = 3,4,5,6
	CMPB	D,TMPMIS
	BEQ	70$
	STAB	D,TMPMIS
	BRA	80$
70$:	LDAA	E,EXPLAY	;READY EXPLAY SWITCH WORD
	ANDA	I,0C0
	CMPA	D,EXPL
	BEQ	CKCD
	STAA	D,EXPL
80$:	JMP	E,ST2		;IF CHANGE, RESTART THINGS
;MAKE SURE THINGS ARE DONE
CKCD:	LDAA	D,GMSTAT	;GAME IN HOLD MODE? (BIT 40)
	BEQ	20$		;IF EQ, EVERYTHING IN GAME IS OVER
	LDAA	D,P0V+15.	;IF YES, ARE OBJECTS FINISHED?
	ORAA	D,P0V+11.
	BMI	21$		;IF -, NO
	LDAA	D,P0V+1		;AMBULANCE OUT?
	ORAA	D,P0V+5
	BITA	I,2
	BEQ	20$
21$:	RTS			;BACK TO THE MAIN LINE
20$:	JSR	HIOUT		;GAME IS COMPLETED, WRITE GAME OVER
	LDAA	D,RTC
	BNE	2$
	LDAA	D,FREEZ		;CHECK THIS EVERY 256 FRAMES
	BEQ	6$
	DEC	E,FREEZ		;WAIT FOR END OF FREEZ TO START ATTRACT
6$:	DEC	E,ATTYM		;ATTRACT TIMER
	BEQ	3$		;IF 0, RESTART
2$:	LDAA	D,CREDIT		;CREDIT CHECK
	BNE	COINOP
	LDAA	D,CMODE		;IF FREE PLAY, JUMP TO ROUTINE
	BEQ	COINP2
	JSR	PUSH		;CHECK BUTTON
	RTS
3$:	JMP	E,ST3	
COINOP:	CLRA			;CREDIT IN, RESET "STUFF"
	STAA	D,C2		;CLEAR PLAYERS
	LDAA	I,^H0FF		;WAIT TIME
	STAA	D,WTTYM
COINP2:
	LDAA	D,C2		;ANY PUSHED?
	BEQ	10$		;IF 0, NO STARTS PUSHED
1$:	TST	E,VBLANK	;ONLY IF IN WAIT MODE
	BMI	1$			;SYNC WITH V BLANK
	INC	E,RTC		;KEEP THIS ALIVE
10$:	TST	E,IRQ
	JSR	PUSH
	BSR	LMPFLS		;FLASH START LAMPS
	LDAA	D,CMODE		;FREE PLAY?
	BEQ	12$		;IF YES, WRITE 'PUSH START' ALWAYS
	LDAA	D,CREDIT	;CREDIT?
	BEQ	14$
;FLASH PUSH STARTS
12$:	LDAA	D,RTC		;TIME?
	BITA	I,01E			;AND 1E (COULD BE ONLY EVEN FRAMES)
	BNE 	16$
	BITA	I,20		;ON OR OFF
	BNE	9$
14$:	BSR	CLRLN		;OFF
	BRA	16$
9$:	LDAB	I,2		;PUSH STARTS
	JSR	DSPLY
16$:	LDAA	D,C2		;ANY STARTS PUSHED?
	BNE	20$
	RTS			;NO START, RETURN
20$:	CMPA	I,3		;BOTH STARTS PUSHED?
	BEQ	30$		;IF YES, START GAME
	JSR	INIT2
	DEC	E,WTTYM		;WAIT SOME TIME ON SINGLE PLAYER START
	BNE	COINP2
30$:	COM	E,GMSTAT	;START GAME
	JSR	HISCRR		;RESET HIGH SCORE
	JSR	CLRSCR		;CLEAR SCORES
	LDS	I,STKPTR	;RESET STACK
	LDAA	I,9.		;9 SECONDS FOR LATE STARTERS
	STAA	D,TIME		;LATE START DELAY
	JMP	E,GAMSTR	;START GAME
CLRLN:	LDX	I,0540		;CLEAR LINE 2&3
CLRLN2:	STX	D,OUTWH		;IF ENTERED HERE, CLEAR DESIRED 2 LINES
	LDX	I,MES16		;#16'S BLANK LINE
	PSHA			;THIS PUSH IS BECAUSE DSPLY2 HAS AN EXTRA PULA
	JMP	DSPLY2		;DO IT
LMPFLS:	LDAA	D,CMODE	;FLASH LAMPS ALWAYS IN FREE PLAY
	BEQ	10$
	LDAA	D,CREDIT	;NO CREDIT, NO FLASH
	BNE	10$
5$:	STAA	E,STLITE
	STAA	E,STLITE+2		;BOTH OFF
	RTS
10$:	LDAB	D,RTC		;CHECK FLASH TIME
	BITB	I,10
	BNE	5$		;TIME FOR BOTH OFF
	LDAA	D,C2		;PLAYER 1 ACTIVE?
	BITA	I,1
	BNE	13$
	STAA	E,STLITE+1	;LAMP 1 ON
13$:	BITA	I,2		;PLAYER 2 ACTIVE?
	BNE 	14$
	STAA	E,STLITE+3	;LAMP 2 ON
14$:	RTS
	.PAGE
	.SBTTL	NMI COIN ROUTINE AND STEERING READ ROUTINE
NMI:	JSR	EXGOT		;KEEP IT MOVING
	LDAA	D,CMODE		;FREE PLAY?
	BEQ	10$		;IF YES, NO NEED TO READ COINS
	JSR	COIN68		;LOOK FOR MONEY
	LDAB	D,CREDIT	;ANY CHANGE?
	CMPB	D,OLDCRD
	BEQ	10$		;IF NO CONTINUE TO PROCESS
	INC	E,CHANGE	;AN CHANGE
	STAB	D,OLDCRD
	LDAA	I,^H0FF
	STAA	D,WTTYM		;RESET WAIT TIME
;
;SIREN HANDLER
;
10$:	LDAA	D,GMSTAT	;NO SOUNDS DURING ATTRACT
	BNE	11$
	JMP	E,NMIEND
11$:	LDAA	D,P0V+1	
	PSHA
	LDAA	D,P0V+5		;PLAYER #2
	LDX	I,2
1$:	ANDA	I,0EF
	CMPA	I,42		;AMBULANCE OUT?
	BNE	8$
2$:	LDAA	X,SIREN		;YEP,WE GOT ONE OUT
	BEQ	3$		;ON DELAY TIME?
	DECA			;NOPE
	BNE	7$		;READY TO DELAY?
	JSR	SNDOFF		;WHICH ONE?
3$:	LDAB	X,SIRD		;DELAY OFF TIMER
	DECB
	BPL	4$
	LDAB	I,02		;OFF TIME BETWEEN OCTAVES
	LDAA	I,30		;ON TIME
	CPX	I,2		;#2?
	BEQ	5$		;IF YES, DO OTHER
	STAA	E,WISTL1+3	;HIGH ON WISTLE TURNS IT ON
;WARBLE SIREN
	TST	E,OCTV+1	;UP AN OCTAVE?
	BMI	6$
	STAA	E,OCTVE+2	;WELL, UP OR DOWN!
	BRA	20$
6$:	STAA	E,OCTVE+3
20$:	COM	E,OCTV+1	;FLAG SHOWS CHANGES
	BRA	4$
5$:	STAA	E,WISTL1+1	;SEE ABOVE FOR COMMENTS
	TST	E,OCTV
	BMI	21$
	STAA	E,OCTVE
	BRA	22$
21$:	STAA	E,OCTVE+1
22$:	COM	E,OCTV
4$:	STAB	X,SIRD		;PUT THINGS BACK
7$:	STAA	X,SIREN
8$:	DEX
	BEQ	9$
	PULA
	BRA	1$
9$:	LDAA	D,NMINUM	;GET INTERRUPT COUNT
	INCA			;NEXT INTERRUPT
	STAA	D,NMINUM
	ANDA	I,03		;ONLY CARE FOR 1 OF 4
	ASLA			;X2 FOR WORD TABLE
	LDAB	I,<TBL1/256.>&255.
	STAB	D,NMINUM+1
	STAA	D,NMINUM+2	;JUMP POINTER SET UP
	LDX	D,NMINUM+1
	LDX	X,TBL1&255.
	JMP	X,0		;JUMP TO ROUTINE
;
;TBL1:	TABLE OF INTERRUPT ROUTINES
;
TBL1:	.WORD	SOUND2,SOUND1,SOUND2,SOUND3
;NMINUM=0,1,2,3
;
;
;
;SPLAT SOUND
;
SOUND2:	CLRA			;SPLAT SOUND INDEX
	LDX	D,SPLTIX
	BEQ	NMIEND		;IF 0, NOT NEEDED
	LDAA	X,0		;NEXT SOUND
	BEQ	10$		;DONE?
	INX
9$:	STAA	D,SPLLEV	;SAVE SPLATE LEVEL
	STX	D,SPLTIX
	BRA	NMIEND
10$:	LDX	I,0
	BRA	9$
;
;SPLAT
;
SPLAT:	.BYTE	2,3,4,8.,12.,15.,12.,7,5,4,3,4,5,3,3,2,2,2,2,0
;
;
;SHUTE OPENING SOUND
;
SOUND3:	LDX	D,SHTTIX		;SOUND NEEDED?
	BEQ	NMIEND		;IF 0, NO
	LDAA	X,0		;YES, OUTPUT NEXT IN SEQUENCE
	BEQ	10$
	INX
9$:	STAA 	D,SHTLEV
	STX	D,SHTTIX
	BRA	NMIEND
10$:	LDX	I,0
	BRA	9$
SHUTS:  .BYTE 1,2,3,4,4,4,4,5,6,6
	.BYTE 5,4,5,7,9.,11.,5,0
;
;TARGET HIT SOUND
;
SOUND1:	LDX	I,2
1$:	LDAA	X,FLASH1	;BEEP?
	BEQ	11$
	LDAB	D,RTC
	BITB	I,4		;ON OR OFF
	BNE	10$
	CPX	I,2		;WHICH ON?
	BEQ	5$
	STAA	E,WISTL1+3
	BRA	11$
5$:	STAA	E,WISTL1+1
	BRA	11$
10$:	BSR	SNDOFF
11$:	DEX
	DEX
	BEQ	1$		;DO 2 TIMES
NMIEND:
	LDAA	D,GMSTAT	;NO SOUNDS IF GAME OVER
	BNE	1$
	CLRA			;0=NO SOUND
	BRA	2$
1$:	LDAA	D,SOUNDL	;GET TOTAL OF SOUNDS
	ADDA	D,SPLLEV
	ADDA	D,SHTLEV
	CMPA	I,0F		;DON'T OVERFLOW
	BLE	2$
	LDAA	I,0F		;IF OVER, OUTPUT TOP SOUND
2$:	STAA	D,SNDOUT	;STORE AWAY
;
;OUT OF BOUNDS CHECK
;
	TSX			;READ STACK
	LDAA	X,5		;HIGH BYTE M
	CMPA	I,^H80		;H-40
	BCC	40$		;IF CARRY CLEAR,>=40
	CMPA	I,^H28		;IF CARRY SET, L28
	BCS	40$
	JMP	INTCOM
40$:	SWI			;RESET
SNDOFF: CPX	I,2		;WHICH TO TURN OFF
	BEQ	1$		;TURN OFF A WISTLE
	STAA	E,WISTL1+2
	RTS
1$:	STAA	E,WISTL1
	RTS
	.PAGE
	.SBTTL	BUTTON CHECK & CREDIT DISPLAY
PUSH:	CLRB			;WRITE 'GAME OVER'
	JSR	DSPLY
PUSH2:	LDAA	D,CMODE		;FREE PLAY?
	BEQ	1$		;IF YES, DO ROUTINE ALWAYS
	LDAA	D,CREDIT		;CREDIT?
	BEQ	3$			;IF NO CREDIT, LEAVE
	LDAB	I,9.		;MAX OF 9 CREDITS
	CBA			;CREDIT-9
	BLE	1$
	STAB	D,CREDIT		;SET CREDIT MAX AT 8 CREDITS
1$:	LDAA	D,C2			;GET ACTIVATED STARTS FLAG
	BITA	I,1			;PLAYER 1 ALREADY ACTIVE?
	BNE	2$			;IF ACTIVE, TRY START 2
	LDAB	E,START1
	ORAB	E,START1		;NOISE SPIKE REMOVAL
	ASLB
	BMI	2$			;IF NO START 1, TRY 2
	LDAB	I,^H0C8
	STAB	D,STAT
	ORAA	I,1			;SET ACTIVE BIT 1
4$:	STAA	D,C2
	LDAB	D,CREDIT		;ANY CREDITS LEFT?
	BEQ	2$
	DEC	E,CREDIT		;IF YES, TAKE ONE AWAY
2$:	LDAB	D,CMODE			;FREE PLAY
	BEQ	98$
	LDAB	D,CREDIT		;ANY CREDIT
	BEQ	3$			;IF NO CREDIT, LEAVE
98$:	BITA	I,2			;PLAYER 2 ALREADY ACTIVE?
	BNE	3$
	LDAB	E,START2
	ORAB	E,START2		;NOISE SPIKE REMOVAL
	ASLB
	BMI	3$
	LDAB	I,^H088
	STAB	D,STAT+4
	ORAA	I,2			;SET ACTIVE BIT 2
	BRA	4$
	;COIN MESSAGES
	;LATE START UP
3$:
;COIN MESSAGES
CMOD:	LDAB	D,GMSTAT		;GAME ON
	BPL	13$
	JMP	LMPFLS
13$:	LDAA	D,CMODE
	BNE	12$
	LDX	I,0500
	JSR	CLRLN2
	JMP	E,NMS
12$:	LDAA	D,CREDIT		;ANY CREDIT
	BEQ	6$			;IF NO, NO "CREDIT FOR"
	LDAB	D,CHANGE		;CREDIT.  TIME FOR CHANGE?
	BEQ	5$			;IF 0, NO CHANGE
	LDX	I,500			;CLEAR CREDIT & INSERT COIN LINES
	JSR	CLRLN2
	LDAB	I,1			;SOME CREDIT
	JSR 	E,DSPLY
	LDX	I,^H0532	;OUTPUT LOCATION OF CREDIT (ENGLISH)
	LDAB	D,LANG		;
	CMPB	I,4		;SPANISH?
	BNE	25$
	DEX			;1 LESS IF YES
25$:	CMPB	I,2		;FRENCH?
	BNE	20$
	DEX			;2 LESS
	DEX
20$:	CMPB	I,6		;GERMAN?
	BNE	10$
	INX			;2 FORWARD ON GERMAN
	INX
10$:	ADDA	I,^H70		;ASCII OUTPUT OF CREDIT
	STAA	X,0
	BRA	5$
6$:	;FLASH INSERT COINS
	LDAA	D,RTC		;FLASH TIME?
	BITA	I,01E
	BNE	5$
	BITA	I,20		;ON OR OFF
	BNE	9$
	LDX	I,0520		;TAKE OFF
	JSR	CLRLN2
	BRA	5$
9$:	LDAB	I,3
	JSR	DSPLY

5$:
;
;COIN MESSAGE ROUTINE
;
MODOT:  LDAA	D,CHANGE		;NEED FOR MESSAGES?
	BNE	1$
	RTS
1$:	LDAB	I,6		;WRITE COIN & PLAYER
	JSR	DSPLY
	LDAB	I,7
	JSR	DSPLY
	LDAB	D,CMODE		;GET COIN MODE
	ASLB			;MULTIPLY BY 2
	LDX	I,CNM-2		;DO PROPER COIN MODE ROUTINE (NO MODE 0 SO -2 FOR 1-3)
	JSR	OFFSET		;GET MESSAGE ROUTINE ADDRESS
	LDX	X,0
	LDAA	I,71
	JMP	X,0		;DO COIN ROUTINE
C12:				;1 COIN 2 PLAYERS
	LDAB	I,8		;MESSAGE 1 ADD S
	JSR	DSPLY
	LDAB	I,72		;PLAYERS
	BRA	OUTC
C11:				;1 COIN 1 PLAYER
	TAB
	BRA	OUTC
C21:	LDAB	D,LANG
	CMPB	I,6		;GERMAN?
	BEQ	2$
	LDAB	I,53		;S TO OTHERS
	BRA	3$
2$:	LDAB	I,4E		;N TO GERMAN
3$:	STAB	E,050E
1$:	TAB			;B=71
	INCA			;A=72
OUTC:	LDX	I,0508
	PSHB
	LDAB	D,LANG		;ENGLISH?
	BEQ	1$		;IF YES, OUTPUT SPOT OK
	DEX			;MOVE BACK 1
	SUBB	I,2		;FRENCH?
	BEQ	1$
	DEX
				;SPANISH & GERMAN
1$:	STAA	X,0		;OUTPUT COINS PER PLAYER
	PULB
	STAB	E,0510		;OUTPUT PLAYERS PER COIN
;
;# OF MISSES OUT & 'EXTENDED PLAY FOR' MESSAGES
;
NMS:	LDAA	D,CHANGE
	BEQ	15$
	LDAB	I,9
	JSR	DSPLY		;# OF MISSES PER PLAYER
	LDX	I,^H05E7
	LDAB	D,LANG		;WHERE TO PUT #
	BEQ	10$		;ENGLISH?
	DEX			;-1 FOR SPANISH & FRENCH
	CMPB	I,4
	BLE	10$
	DEX			;-3 FOR GERMAN
	DEX
10$:	LDAB	D,TMPMIS
	ORAB	I,70
	STAB	X,0
	LDAB	D,EXPL		;EXTENDED PLAY?
	BMI	15$		;IF-, NO EXPLAY
	PSHB
	LDAB	I,0B
	JSR	DSPLY
	PULB
	LDAA	I,30		;3000 POINTS
	ASLB			;HARD?
	BMI	16$		;IF-, EASY SELECTED
	LDAA	I,40		;YES, UP TO 4000 PTS
16$:	LDAB	D,TMPMIS	;GET # OF MISSES
	SUBB	I,2		;SCORE 1-4
17$:	DECB
	BEQ	18$
	ADDA	I,7		;700 PTS PER MISS OVER 3
	DAA
	BRA	17$
18$:	STAA	D,EXSCR
	LDX	I,0637		;OUTPUT ENGLISH & GERMAN
	LDAB	D,LANG
	BEQ	19$		;ENGLISH(O) OK
	SUBB	I,3
	BEQ	19$		;GERMAN(3) OK
	DEX			;FRENCH & SPANISH -1
19$:	JSR	FX2		;OUTPUT THOUS & HUNDS
	CLRA			;2 0'S NOW
	JSR	FX2
15$:	CLR	E,CHANGE
	RTS
;
;TABLE OF COIN ROUTINES
;
CNM:	.WORD	C12,C11,C21
	.PAGE


	.SBTTL	GAME PLAY ROUTINES
GAMSTR:	JSR	INIT2		;INITIALIZE OBJECTS
	LDAA	D,GMSTAT	;NO SOUNDS ON ATTRACT
	BEQ	2$
	STAA	E,ATTRACT+1	;SOUND ON
	LDX	I,CHAN1		;START 'OFF WE GO'
	STX	D,HPTR		;MUSIC
	LDAA	I,1
	STAA	D,CNTRL		;TURN ON CONTROL WORD
	CLRA
	STAA	D,FREEZ		;RESET FREEZ TIME
	STAA	D,WTS1		;CLEAR TARGETS
	STAA	D,BTS1
	STAA	D,BONUS		;CLEAR BONUS
	STAA	D,BONUS+2
	LSR	E,EXPST		;FREE PLAY STATUS WORDS
	LSR	E,EXPST+2	;ROTATE OUT LOCKOUT BITS
	LSR	E,CNFLG
	LDAA	D,TMPMIS	;SET UP # OF MISSES

	STAA	D,MISSES
	STAA	D,MISSES+2
	LDX	I,SKDVB		;BLOCK OUT SKYDIVER
	LDAA	I,8		;8 LETTERS
1$:	LDAB	I,80		;BLOCK CHARACTER
	STAB	X,0		;BLACK
	ORAB	I,40		;WHITE BIT
	STAB	X,12
	INX
	DECA
	BNE	1$
2$:	JSR	TARGET		;GROUND UP
BLANK:	LDAA	E,VBLANK	;SET UP FRAME COUNT
	BMI	BLANK
	JSR	OUT		;OUTPUT OBJECTS
	LDAA	I,0FF
	STAA	D,FLAG		;IF FLAG -, ALWAYS OUTPUT
	JSR	TARG1		;OUTPUT #'S
	;NO SOUND WHEN IN ATTRACK SO .......
3$:	INC	E,RTC		;UPDATE FRAME COUNT
	LDAB	D,SLTR		;SELECT NEXT LETTER
	LDAA	D,RTC
	ANDA	I,3F		;TIME FOR CHANGE?
	BNE	7$
	INCB
	ANDB	I,7
	STAB	D,SLTR
	LDAA	D,TIME		;LATE STARTS
	BEQ	7$
	DEC	E,TIME
7$:	LDAA	D,GMSTAT	;NO LETTER IF GAME OFF
	BPL	30$
;
;TURN ON SELECT LETTER
;
	TBA			;PUT LETTER # INTO A
	LDAB	I,080		;START WITH S LIT
18$:	DECA			;CORRECT?
	BMI	8$
	LSRB			;IF NO, STEP TO NEXT LETTER
	BRA	18$
8$:	STAB	D,LETO		;SAVE LETTER
				;ACTIVE MISSES LEFT ONLY
	CLRA			;SET MISSES IN GAME TO 0
	LDAB	D,P0V+3		;PAID?
	BPL	9$
	ADDA	D,MISSES	;OK IF PAID -ADD IN #LEFT
9$:	LDAB	D,P0V+7
	BPL	6$
	ADDA	D,MISSES+2	;ADD THESE ALSO
6$:	TSTA			;GAME OVER?
	BNE	30$
;IF FREE PLAY THIS GAME,SET FLAG
	LDAA	D,EXPST
	ORAA	D,EXPST+2
	CMPA	I,2
	BNE 	15$
	STAA	D,CNFLG
15$:	LDAA	I,40		;SET LIMBO BIT IN GAME STATUS
	STAA	D,GMSTAT
	LDAA	I,05
	STAA	D,FREEZ		;HOLD TIMER
	STAA	D,CHANGE	;MESSAGE FLAG ON
	CLRA
	STAA	D,C2
	LDAA	D,STAT		;CLEAR STATUS WORDS OF ACTIVE BITS
	ANDA	I,7F
	STAA	D,STAT
	LDAA	D,STAT+4
	ANDA	I,7F
	STAA	D,STAT+4
10$:	JMP	E,BLANK		;RETURN TO CYCLE
30$:	LDAB	D,LETO
	JSR	E,LTSON		;USING B, TURN ON NEEDED LAMPS
	LDAA	I,3
	STAA	D,R5		;POINT R5 @ DRIVER 2
	LDX	I,10
	STX	D,R6		;(P# *4)+4
	LDX	I,08		;DON'T FORGET R0
	STX	D,R0		;P# *2
;**** ATTRACK LOOP CHECK *******************************
	LDAA	D,GMSTAT		;GAME ON?
	BMI	SWITCH			;YES IF -
	JSR	ATLP			;DO ATRACT STUFF
;IF FREEZE, NO MOTION
	LDAA	D,P0V+11.
	ORAA	D,P0V+15.
	BMI	SWITCH		;FINISH WHAT WAS STARTED
	LDAA	D,FREEZ
	BEQ	SWITCH
	CMPA	I,1		;RESET?
	BNE	SWITCH
	DEC	E,FREEZ
	JMP	E,ST3
	;LATE START UP & LAMP CONTROL
SWITCH:	LDAA	D,GMSTAT
	BPL	64$
	LDAA	D,TIME
	BNE	63$
	BRA	64$
63$:	JSR	PUSH2
64$:	LDAA	D,GMSTAT
	BNE	65$
	JMP	CYCLE1
65$:	LDAB	E,JUMP+1
	LDAA	D,P0V+15.	;DIVER STATUS
	ANDA	I,0F9		;CLEAR LEFT/RIGHT
	STAA	D,P0V+15.
	TST	E,P0V+7
	BPL	CKT1
	BITA	I,08		;SHUTE ALREADY OPEN?
;CHECK "STEER" BIT
	BEQ	10$
	PSHB			;SHUTE OPEN
	LDAB	E,UP0+1		;LOOK @ STEER SWITCH
	BMI	5$
	ORAA	I,2
1$:	STAA	D,P0V+15.
2$:	PULB
	BRA	CKT1
5$:	ASLB
	BMI	2$
	ORAA	I,4
	BRA	1$
10$:	BITA	I,40		;IN THE AIR?
	BEQ	CKT2
	TSTB			;SHUTE BUTTON PUSHED?
	BMI	CKT2
	LDAA	D,P0V+23.	;YES, SET OPEN BIT
	ORAA	I,20
	STAA	D,P0V+23.
CKT2:	LDAA	D,P0V+7
	ASLB			;JUMP BUTTON PUSHED?
	BPL	1$
	CLR	E,RELES+2
	BRA	CKT1
1$:	LDAA	D,P0V+7		;NO JUMP IF AT EDGE OR OFF
	BITA	I,1A
	BNE	CKT1
	BITA	I,20
	BEQ	CKT1
	LDAA	D,RELES+2
	BNE	CKT1
	LDAA	D,P0V+15.	;SET JUMP BIT
	ORAA	I,20
	STAA	D,P0V+15.	;STORE BACK
	STAA	D,RELES+2
CKT1:	LDAB	E,JUMP		;#1'S SWITCH
	LDAA	D,P0V+11.	;STATUS OF MAN
	ANDA	I,0F9
	STAA	D,P0V+11.
	TST	E,P0V+3
	BPL	CYCLE1
	BITA	I,08		;SHUTE OPEN ALREADY?
	BEQ	10$
	PSHB
	LDAB	E,UP0
	BMI	5$
	ORAA	I,2
1$:	STAA	D,P0V+11.
2$:	PULB
	BRA	CYCLE1
5$:	ASLB
	BMI	2$
	ORAA	I,4
	BRA	1$
10$:	BITA	I,40		;IS HE IN THE AIR?
	BEQ	CKT12
	TSTB
	BMI	CKT12
	LDAA	D,P0V+19.
	ORAA	I,20		;SET OPEN BIT
	STAA	D,P0V+19.
CKT12:	LDAA	D,P0V+3
	ASLB			;IN THE AIR?
	BPL	1$
	CLR	E,RELES
	BRA	CYCLE1
1$:	LDAA	D,P0V+3
	BITA	I,1A
	BNE	CYCLE1		;NO JUMP AT EDGE OR OFF
	BITA	I,20
	BEQ	CYCLE1		;ON SCREEN
	LDAA	D,RELES
	BNE	CYCLE1
	LDAA	D,P0V+11.
	ORAA	I,20
	STAA	D,P0V+11.
	STAA	D,RELES
CYCLE1:	TST	E,IRQ
	JSR	WINDSET		;SET UP WIND & FLAGS
	LDAB	I,2		;DO THIS TWICE
1$:	PSHB
	BSR	FLSHD		;FLASH ANYTHING NEEDING IT
	JSR	AUTOJMP		;AUTO CONTROL IF COMPUTER
	JSR	LETTER		;SELECT & FLASH LETTER
	JSR	GROUND		;MOVE MAN & CHECK FOR TARGET
	JSR	FLHIT		;TARGET FLASH
	JSR	MOVE		;MOTION
	JSR	MOVE
	JSR	NXT		;UPDATE IX
	PULB
	DECB
	BNE	1$
	JSR	PLANE		;MOVE PLANE 2
	JSR	NXT
	JSR	PLANE		;MOVE PLANE 1
;LET FALL DOWN INTO NXT SO IT WILL RETURN BY ITSELF
;POINTS IX'S AT NEXT OBJECT
NXT:				;(P#*4)+4
	DEC	E,R5		;DEC. PLAYER #
	LDAA	D,R6+1
	SUBA	I,4
	STAA	D,R6+1
	LDX	D,R0
	DEX
	DEX
	BEQ	1$
	STX	D,R0
	RTS
1$:	JMP	E,BLANK		;LAST PLAYER DONE
FLSHD:	LDX	D,R0
	LDAA	D,RTC
	ANDA	I,07			;TIME FOR DEC
	BNE	10$
	LDAA	X,FLASH1-5		;FLASH TIME DONE?
	BEQ	10$
	DEC	X,FLASH1-5
	BNE	10$
	CLR	X,FLASH1-6		;YES, SO "CLEAR" FLASH PLACE
	JMP	E,STTRG		;NEW TARGET
10$:	RTS
	.PAGE
	.SBTTL	FALLING MAN VELOCITY ROUTINE
;
;THIS ROUTINE HANDLES VELOCITIES ONLY & MOVE MUST BE CALLED FOR EACH MAN
;FALL OF MAN & INITIAL SHUTE CONTROL (DIVER 1 OR 2)
;
CKM1A:	.BYTE 097			;CHECK SUM FOR 3400-37FF
MAN:
	LDAA	X,P0V-11.	;CHECK THE PIC FOR AN AMBULANCE
	BITA	I,2
	BNE	MAN-1
	LDAA	X,P0V-1		;GET MAN'S STATUS
	BPL	INPLANE		;NOT ON SCREEN IF +
	BITA	I,40		;FALLING. BUT HOW? (FREE FALL?)
	BNE	10$		;IF +,SHUTE IS OPEN FULLY
	JMP	E,OPEN
10$:	BITA	I,8		;JUST OPENING?
	BEQ	70$		;IF NE, SHUTE IS OPENING
	JMP	E,OPPENING
70$:	LDAB	X,P0V-2		;FREE FALL
	LDAA	D,RTC
	ANDA	I,07
	BNE	71$
	LDAA	I,1
	EORA	X,P0V-3		;WAVE ARMS ON MAN DURING FREEFALL
	STAA	X,P0V-3
71$:	LDX	D,R0		;SETS TARGET WIDTH BY VERT OF MAN
	JSR	SETWIT
	STAB	X,WIDTH-6
;
;UPDATE TARGET VALUE
;
	LDAA	D,RTC
	ANDA	I,3		;TIME FOR UPDATE
	BNE	72$
	LDAA	X,WTS1-6	;GET  TARGET SCORE
	ADDA	I,2
	DAA
	STAA	X,WTS1-6	;REPLACE DECIMAL NUMBER
72$:	CLRB			;H DRAG=0 OR .....
	LDAA	D,RTC
	ANDA	I,07
	BNE	4$
	ADDB	I,1		;HORIZ DRAG=3 ON OCCASION
4$:	LDAA	X,VEL-2		;+ OR - DRAG
	BEQ	6$		;IF 0, DON'T CHANGE IT
	BMI	5$
	NEGB			;IF + VEL, - DRAG
5$:	ADDB	X,VEL-2		;ADD IN HORIZ FREE FALL DRAG
6$:	STAB	X,VEL-2
	LDAB	I,-1		;GRAVITY
	ADDB	X,VEL-1		;UPDATE VERTICAL FALL SPEED
	BPL	7$		;IF OVERFLOW, SKIP IT
	STAB	X,VEL-1
7$:
;
;SHUTE CHECK IN FREE FALL ( HAS HE PUSHED IT YET?)
;
SHUTCK:
	LDX	D,R6		;(P#*4)+4
	LDAA	X,P0V+7		;GET SHUTE'S STATUS
	BITA	I,20		;CHECK SHUTE PUSHED BUTTON
	BEQ	1$
				;NO CHANGE
	LDAA	X,P0V-1		;MAN'S STATUS
	ORAA	I,08		;SET SHUTE OPENING BIT
	STAA	X,P0V-1
1$:	RTS
INPLANE: BITA	I,20		;JUMP BUTTON PUSHED
	BEQ	CHICKEN		;IF =, NO!
	LDX	D,R0
	LDAA	X,MISSES-6
	BEQ	INPLANE-1
	LDX	D,R6
JUMPED:	LDAA	I,0C0		;JUMP BUTTON PUSHED, START FREE FALL SEQ.
	STAA	X,P0V-1		;SET JUMP BIT & ACTIVE BIT
	LDAA	X,P0V-10.		;VERTICAL OF PLANE....
	STAA	X,P0V-2		;...INTO VERTICAL OF MAN
;CLEAR NO JMP BIT
	LDAA	X,P0V-9.
	ANDA	I,0FE
	STAA	X,P0V-9.
;
;SET & SELECT LETTER IX=DIVER
;
SETLTR:
	LDAB	D,SLTR		;GET LIT LETTER #
	PSHB			;SAVE #
	JSR	GTPTR		;GET SCREEN POINTER
	PULB			;GET LETTER # BACK
	LDAA	X,0		;READ SCREEN. BLOCK THERE?
	BMI	2$		;IF BLOCK, SAVE #, ELSE PUT.....
	LDAB	I,80		;- IF ALREADY A LETTER
2$:	LDX	D,R0
	STAB	X,SELECT-6	;SET SELECT FOR THAT PLAYER
	LDAA	X,VEL-6		;SET HVEL OF PLANE....
	STAA	X,VEL-2		;INTO MAN
	LDAA	I,0FF
	STAA	X,VEL-1		;START MAN FALLING
	LDAA	D,GMSTAT	;NO SOUND IF ATTRACT
	BEQ	CLRTG
	LDAA	D,R5		;TURN ON CORRECT WISTLE
	LSRA
	BCC	1$
	TST	E,WISTL1+1	;DROP ON
	STAA	E,JLITE1	;JUMP LITE OFF
	STAA	E,OCTVE
	BRA	STTRG
1$:	TST	E,WISTL2+1
	STAA	E,JLITE2	;JUMP LITE OFF
	STAA	E,OCTVE+2
STTRG:	LDAB	I,1		;TARGET STARTS 10
	BRA	CLRTG+1
;RESET TARGET
CLRTG:  CLRB			;CLEAR TARGET
	LDAA	D,R5
	LSRA
	BCS	10$
	STAB	D,WTS1
9$:	JMP	E,TARG1		;NEW TARGET
10$:	STAB	D,BTS1
	BRA	9$
CHICKEN:	CLRA			;THE MAN HASN'T JUMPED YET (CHICKEN) OH YEAH!!
	STAA	X,P0V-2		;VERTICAL OFF SCREEN
	LDAA	I,01		;FIRST FALLING MAN PIC
	STAA	X,P0V-3		;RESET PIC
	LDAA	I,21		;FIRST SHUTE PIC-1
	STAA	X,P0V+5		;RESET PIC
	LDAB	X,P0V-9.	;PLANE'S STAT
	LDX	D,R0		;KEEP HORIZ UP TO DATE
	LDAA	X,P0H-5		;TAKE PLANES HORIZ AND.....
	BITB	I,40		;R TO L?
	BEQ	3$		;MUST OFFSET DUE TO STRETCH OF PLANE
	ADDA	I,0E		;IF YES, OFFSET
3$:	STAA	X,P0H-1		;STORE IT TO THE MAN
;
;FLASH JUMP BUTTONS
;
	TSTB			;B HAS PLAYER STATUS
	BPL	9$		;IF +, NOT PAID FOR SO NO FLASH
	LDAB	X,MISSES-6	;NO FLASH IF NO JUMPS LEFT
	BEQ	9$
	CLRB			;START B=0 FOR LIGHTS OFF
	LDAA	D,RTC		;GET TIME BITS
	BITA	I,0F		;TIME FOR CHANGE/
	BNE	9$
	BITA	I,10		;WHICH, ON OR OFF?
	BNE	20$
	INCB			;B=1 FOR ON (YOU WILL SEE HOW!!)
20$:	LDX	I,JLITE1	;GUESS PLAYER 1
	LDAA	D,R5		;WHICH?
	LSRA
	BCS	25$
	LDX	I,JLITE2	;WRONG, IT'S PLAYER 2
25$:	JSR	OFFSET		;ADD B (IF 1 THEN ON ELSE OFF)
	STAA	X,0		;DO ACTION
9$:	RTS
OPEN:
;SHUTE IS FULLY OPEN, SO SLOW DOWN THIS TURKEY BOTH DIRECTIONS
;
	LDX	D,R0		;(P#*2)+2
	LDAB	I,LOWEND	;VERTICAL
	CMPB	X,VEL-1		;L-V
	BEQ	1$
	BLS	15$
	LDAB	X,VEL-1		;GET VEL BACK
	ADDB	I,05
15$:	STAB	X,VEL-1
1$:	LDAB	X,VEL-2		;HOW ABOUT BRINGING HORIZ TO NEAR 0
	PSHB
	BPL	2$
	NEGB			;CHECK HORIZ AS + NUMBER
2$:	ANDB	I,0F8		;A VEL IS < OR EQUAL TO 7 IS OK (COULD BE WIND)
	PULB
	BEQ	3$
	ASRB
3$:	ADDB	D,WINDV		;ADD IN WIND VELOCITY
;
;JOYSTICK CONTROL VELOCITY
;
	ANDA	I,6		;TEATHER?
	BEQ	10$
	CLR	E,FLAG
	BITA	I,2		;RIGHT?
	BEQ	5$		;NO, LEFT
	COM	E,FLAG		;SET FLAG FOR LEFT
	ADDB	I,-4		;ADD TO VELOCITY
4$:	STAB	X,VEL-2
	BRA	6$
5$:	ADDB	I,4
	BRA	4$
6$:	LDAA	I,6		;TILT DIVER PIC
	LDAB	I,25
	TST	E,FLAG		;WHICH WAY?
	BNE	7$
	ORAA	I,10		;TILT OTHER WAY
	ORAB	I,10
7$:	LDX	D,R6
	STAA	X,P0V-3		;CHANGE BOTH MAN...
	STAB	X,P0V+5		;& SHUTE PICTURES
	RTS
10$:	STAB	X,VEL-2
	LDAB	I,24		;STRAIGHT UP PICS
	LDAA	I,5
	BRA	7$
;
;SHUTE IS OPENING, SO STILL "FREE FALL", BUT GET READY
;
OPPENING:
;THIS ROUTINE DOES ALL PICTURE CONTROL, FROM FREE FALL TO MAN WITH SHUTE
;FULLY OPEN  -  NO VELOCITY CHANGE DURING THIS PERIOD
	BSR	WISOFF
21$:	LDAA	X,P0V-3		;GET PICTURE
	CMPA	I,LASTPIC	;LAST PIC IN SEQUENCE
	BLT	STIME		;IF = (< IN CASE), WERE DONE
	BEQ	TPOUT
SDONE:	LDAA	X,P0V-1		;GET STATUS -THE SHUTE IS OPEN
	ANDA	I,09F		;CLEAR FREE FALL BIT (STATUS = OPEN)
	STAA	X,P0V-1		;INDICATES SHUTE FULLY OPEN
1$:	RTS
STIME:	LDAB	D,RTC		;NOT LAST PICTURE
	ANDB	I,07		;TIME FOR CHANGE? (THIS IS CHANGE FREQ)
	BNE	STIME-1		;WELL? IF NE, RETURN
	INCA			;YES -STEP TO NEXT PICTURE
	STAA	X,P0V-3		;RESTORE
	CMPA	I,TWOPIC	;2 PICTURE TIME?
	BLT	STIME-1		;IF LT, NOT NEEDED NOW
TPOUT:	LDAA	I,22		;NEED SECOND PICTURE
	CMPA	X,P0V+5		;FIRST PIC ALREADY OUT?
	BLE	9$
	LDX	I,SHUTS		;START SHUTE OPPENING SOUND
	STX	D,SHTTIX
	LDX	D,R6
	BRA	10$
9$:	LDAA	X,P0V+5		;WHICH PIC?
	CMPA	I,24		;LAST PIC OUT YET
	BEQ	SDONE
	INCA
10$:	STAA	X,P0V+5		;FIRST PICTURE OUT
	LDAA	X,P0V-4
	STAA	X,P0V+4		;SET VSMB
	LDAA	I,80
	STAA	X,P0V+7		;ACTIVE!
	LDX	D,R0		;(P#*2)+2 (FOR H)
	LDAA	X,P0H-2		;HLSB
	LDAB	X,P0H-1		;HMSB
	STAA	X,P0H+2		;TO HLSB
	STAB	X,P0H+3		;TO HMSB
	RTS
;TANGLE BIT CHECK & BIT SET COULD GO HERE LATER
WISOFF: LDAA	D,R5
	LSRA	
	BCC	10$
	STAA	E,WISTL1
	RTS
10$:	STAA	E,WISTL2
	RTS
	.PAGE
	.SBTTL	PLANE MOVE & RESTART
;
;MOVE & RESTART PLANE ROUTINE
;
PLANE:	LDX	D,R6
;
;OUTPUT INFO TO SCREEN
;
	LDAA	X,P0V-2
	LDAB	X,P0V-3		;V AND PIC
	LDX	D,R0
	STAA	X,P0VPOS-2
	STAB	X,P0PIC-2
	LDAA	X,P0H-1		;HORIZ
	LDX	D,R4		;P#*1
	STAA	X,P0HPOS
	LDX	D,R6
	LDAA	X,P0V-1		;PLANE'S STATUS
	BMI	2$
	TST	E,TIME
	BEQ	2$
	RTS
2$:	LDAB	X,P0V+7		;DIVERS STATUS
	BITA	I,20		;OK - HE IS PAID FOR.  NOW...............
	BEQ	35$		;IS HE ALREADY MOVING?
	BITA	I,10		;AT EDGE OF SCREEN???
	BEQ	30$
;
; YES, AT EDGE. IS THE DIVER ACTIVE??
;
	BITA	I,1		;A PASS WITHOUT A JUMP?
	BEQ	10$		;IF EQ, NO.......
	ANDA	I,0FE
	ORAA	I,08
	STAA	X,P0V-1
	BITB	I,1		;WAS IT JUST THE AMB. HOWEVER?
	BEQ	9$		;IF BIT ON, YES IT WAS AN AMB....
	CLR	X,P0V-3		;SHUT IT UP NOW
	CLR	X,P0V+7		;CLR PIC AND STAT
	LDX	D,R0
	BRA	WISOFF
9$:	LDX	D,R0		;....OTHERWISE AN UPDATE PENALTY
	PSHA
	LDAA	X,MISSES-2
	BEQ	1$
	DEC	X,MISSES-2
1$:	LDAA	D,R5
	LSRA
	BCC	66$
	STAA	E,JLITE1
	BRA	65$
66$:	STAA	E,JLITE2
65$:	PULA
10$:	LDX	D,R6
	TSTB			;CHECK DIVER STATUS
	BPL	42$		;IF NOT ACTIVE, START ANOTHER PLANE
	BRA	35$		;ELSE CONTINUE WITH WAIT
30$:	LDX	D,R0		;YES, SO MOVE HIM
	CLRB			;VERT=0 ALWAYS
	LDAA	X,VEL-2		;GET HORIZ
	PSHA
	JSR	MOVE2		;MOVE PLANE 1
	PULA
	CLRB
	LDX	D,R0		;RESET & MOVE AGAIN FOR FAST SPEED
	JMP	MOVE2
35$:	BITA	I,08		;READY TO RESTART?
	BNE	42$
43$:	LDX	D,R6		;NEED THIS IX IF CALLED FROM BELOW
	CLR	X,P0V-2		;PLANE OFF SCREEN IF NOT READY
	RTS
42$:	LSRB			;AMBULANCE INSTEAD OF PLANE?
	BCC	44$		;IF CC, NO
	LDAA	I,GND-4		;START WHENEVER NEEDED
	STAA	X,P0V-2		;SET VMSB
	LDAB	I,50		;DO IT KIND OF FAST
	PSHB			;SAVE HVEL FOR LATER
	LDAB	I,42		;AMB PIC
	BRA	50$
;WAIT FOR FREEZ ON PLANE
44$:	LDAB	D,FREEZ
	BNE 	43$
	LDAB	D,DELAY
	BEQ	45$
	DEC	E,DELAY
	BNE	43$
45$:	LDX	D,R0
	LDAA	D,GMSTAT		;ATTRACT
	BEQ	47$
	LDAA	X,MISSES-2
	BEQ	43$			;OUT!
47$:	LDAA	X,VSTART-2
	LDAB	X,VELST-2
	PSHB
	LDX	D,R6		;(P#*4)+4
	PSHA			;HOLD A
	LDAB	X,P0V-1		;GET STATUS
	BITB	I,02		;NEW TARGET?
	BEQ	46$		;NOT NEEDED
	JSR	NEWTAR		;NEW TARGET UP
46$:	PULA			;GET A
	STAA	X,P0V-2		;SET VERTICAL POSITION
	LDAB	I,40
50$:	LDAA	X,P0V-1		;PLANES STAT
	ORAA	I,21		;TURN ON "ON SCREEN" BIT & NO JMP BIT
	ANDA	I,0E7		;TURN OFF "RESTART" & "BORDER" BITS
	STAA	X,P0V-1		;REPLACE
	BITA	I,40		;GET PICTURE
	BEQ	55$
	ORAB	I,10
55$:	STAB	X,P0V-3		;STORE NEW PICTURE
	LDAA	X,P0V-1
	LDAB	X,P0V-2
	LDX	D,R0		;OTHER IX (P#*2)+2
	JSR	SETWIT
	STAB	X,WIDTH-2
	LDAB	I,12		;H START POSITION
	BITA	I,40
	PULA
	BNE	60$
	NEGB
	NEGA
60$:	STAB	X,P0H-1
	CLR	X,P0H-2
	STAA	X,VEL-2		;SET VELOCITY
	LDAB	I,2B		;PLANE START DELAY SO NO OVERLAPED PLANES
	STAB	D,DELAY
	JMP	E,WISOFF
	.PAGE
	.SBTTL	GROUND CHECK ROUTINE
;
;THIS ROUTINE CHECKS TO SEE IF THE MAN HAS "HIT" THE GROUND, REGARDLESS OF
;HIS STATE & SETS THE PROPER BITS.  CALLS 'MAN'.
;	IX=DIVER 1 OR 2 ONLY
CKM2:	.BYTE 0D5		;CHECKSUM 3800-3BFF
GROUND:	LDX	D,R0
	JSR	CKB		;FLASH BONUS IF NEEDED
	LDX	D,R6		;(P#*4)+4
;ALREADY DEAD ON THE GROUND
	LDAA	X,P0V+7		;LANDING??
	LSRA
	BCS	3$		;IF CS, YES.
	LDAA	X,P0V-1
	BPL	1$		;IF NOT ON SCREEN, CALL MAN
	LSRA			;CRASH SEQ IN PROGRESS?
	BCS	50$		;IF YES, DO IT
	BITA	I,8		;AT THE BOARDER (WATCH OUT FOR CUSTOMS!!)
	BNE	MVOFF		;(IF CRASH, CANT BE BOARDER)
	BRA	90$		;IF NONE OF THE ABOVE......
50$:	JMP	E,BOUN2
90$:	LDAA	X,P0V-2		;VERTICAL MSB
	CMPA	I,GND
	BLS	2$		;ON GROUND?
1$:	JMP	E,MAN		;ABOVE GROUND, CONTINUE TO "FALL"
2$:	LDAA	X,P0V-1		;AT GROUND,  WHAT KIND OF HIT
	BITA	I,8		;SHUTE OPEN?
	BEQ	BOUNCE		;WELL, NOTHING IS OPEN SO BOUNCE
	BITA	I,40		;WAS IT JUST OPENING?
	BNE	BOUNCE		;NOT SO BAD A HIT
;SHUTE WAS OPEN SO WE WILL GIVE IT TO HIM
	LDAA	X,P0V+7		;SHUTE STATUS
	ORAA	I,1		;SET LAND BIT
	STAA	X,P0V+7
	LDX	D,R0
	CLR	X,VEL-1		;VELOCITIES=0
	CLR	X,VEL-2
	JSR	SCORE		;DO SCORE SEQUENCE
3$:	LDAA	D,RTC		;SMOOTH LAND SEQUENCE
	ANDA	I,07		;CHANGE FREQ
	BNE	10$
	LDAA	I,26		;WHICH SHUTE PICTURE?
	LDX	D,R6
	CMPA	X,P0V+5
	BEQ	20$
	STAA	X,P0V+5		;NEXT PICTURE
10$:	RTS
20$:	LDAA	I,COLASP	;VERTICAL OF SHUTE PICTURE.....
	TST	X,P0V+6
	BEQ	30$
	CMPA	X,P0V+6		;VERTICAL OF TOP SHUTE PIC
	BEQ	30$
	STAA	X,P0V+6		;MOVE TOP PICTURE DOWN A BIT
	LDAA	I,07
25$:	STAA	X,P0V-3
	RTS
30$:	CLRA			;TOP OF SCREEN?
	STAA	X,P0V+6		;SHUTE OFF SCREEN (HORIZ)
	LDAA	I,20
	LDX	D,R6
	CMPA	X,P0V-3		;MAN WITH SHUTE ABOUT HEAD?
	BGT	25$
	LDAA	X,P0V-3
	INCA
	CMPA	I,22		;IF A, WERE DONE
	BNE	25$		;NEXT IN LAND SEQUENCE
	LDX	D,R0
	LDAA	X,FLASH1-5	;FLASH DONE?
	BEQ	MVOFF2
	RTS
;READY TO END THIS WHOLE JUMP MESS & START OVER
;
MVOFF:  JSR	PENALTY
MVOFF2: LDX	D,R6
	CLR	X,P0V-2		;VERT OF MAN OFF
	CLR	X,P0V+6		;VERT OF SHUTE OFF
	CLR	X,P0V-1		;CLEAR STATUS OF MAN
	CLR	X,P0V+7		;CLEAR STATUS OF SHUTE
	LDX	D,R0		;(P#*2)+2
	LDAA	I,0F8
	STAA	X,P0H-1		;CLEAR HORIZ OF MAN
	STAA	X,P0H-2
	CLR	X,VEL-1
	CLR	X,VEL-2
	JMP	WISOFF		;TURN OFF WISTLE
;
;MAN HIT GROUND SO LETS BOUNCE HIM
;
BOUNCE: JSR 	PENALTY
	JSR	CLRTG
	JSR	WISOFF		;TURN IT OFF
	LDX	I,SPLAT
	STX	D,SPLTIX	;SPLAT SOUND
	LDX	D,R0
	LDAA	X,P0H-1
	STAA	X,P0H+3
	CLR	X,VEL-1
	CLR	X,VEL-2		;IF THE HIT DOESN'T STOP HIM, THIS WILL!
	LDX	D,R6
	LDAA	I,22
	STAA	X,P0V+5		;SET PIC
	LDAA	X,P0V-2
	ADDA	I,07		;SHUTE PIC ABOVE MAN
	STAA	X,P0V+6
	LDAA	I,27
	STAA	X,P0V-3
	LDAA	I,01		;FIRST TIME IN ONLY
	ORAA	X,P0V-1		;SET BOUNCE BIT ON
	STAA	X,P0V-1
BOUN2:	LDAA	X,P0V-1
	BITA	I,40		;SHUTE OPPENING?
	BEQ	10$		;WAIT TILL OPEN & DOWN
	LDAA	D,RTC		;DONT DO IT TO FAST
	ANDA	I,0E		;TIME?
	BNE	11$		;NOT THIS TIME
	JSR	TPOUT		;DO IT
	LDX	D,R6
10$:	LDAA	X,P0V+6		;MOVE PIC DOWN A BIT
	CMPA	I,GND-7		;DOWN ALL THE WAY?
	BLE	20$
	DECA			;NO, MOVE DOWN
	STAA	X,P0V+6
11$:	RTS
20$:	CLR	X,P0V+6		;REMOVE SHUTE
	LDAA	X,P0V-11.	;START THE "MEAT WAGON"
	STAA	D,TIX		;SAVE PIC FOR POSSIBLE USE
	ANDA	I,0EF		;CHECK WHICH PIC
	CMPA	I,42		;WE STRIPED THE DIRECTION BIT OFF
	BEQ	30$		;IF OUT,CONTINUE
	LDAA	I,0F8		;NO, SO DO IT NOW
	STAA	X,P0V-10.	;REMOVE PLANE
	LDAA	X,P0V-9.
	ANDA	I,0C3		;CLEAR THE IMPORTANT BITS
	ORAA	I,08		;SET READY BIT
	STAA	X,P0V-9.
29$:	RTS
;KICK FEET
30$:	LDAA	D,RTC
	ANDA	I,7
	BNE	35$
	LDAA	I,10
	EORA	X,P0V-3
	STAA	X,P0V-3
35$:	LDX	D,R0		;LETS CHECK PROGRESS
	LDAA	X,P0H-1		;WHERE IS THE "WAGON"
	CMPA	I,0F8		;IF -, THE DIVER IS IN THE TRUCK
	BEQ	40$
	SUBA	X,P0H-5		;AT DIVER?
	BPL	31$
	NEGA
31$:	ANDA	I,0FE
	BNE	29$		;WELL THEN KEEP DRIVING
	LDAA	I,0F8		;IF THERE, GET RID OF THE THINGS
	STAA	X,P0H-1
	STAA	X,P0H+3		;MAN AND SHUTE OFF
	CLR	X,VEL-6		;STOP WAGON
	LDX	D,R6
	CLR	X,P0V-2
	CLR	X,P0V+6
	LDAA	I,0FF
	STAA	X,P0V-3
	STAA	X,P0V+5
39$:	RTS
40$:	LDAA	D,RTC		;A RANDOM STOP TIME OF APPROX 1 SEC
	ANDA	I,7E		;(7E AS THE RTC COULD ENTER ONLY ODD)
	BNE	39$
	LDAA	I,70
	LDAB	D,TIX		;WHICH WAY TO CONTINUE?
	BITB	I,10
	BNE	41$
	NEGA
41$:	STAA	X,VEL-6
	LDX	D,R6
	CLR	X,P0V+7		;CLEAR SHUTE STATUS ALSO
	RTS
	.PAGE
	.SBTTL	MOVE ROUTINE
;
;MOVE ROUTINE.  WILL CHECK WALL & DEACTIVATE IF EDGE OF SCREEN REACHED.
;DOES NOT HANDLE OUTCOME OF EDGE HIT
;
MOVE:
	LDX	D,R0		;(P#*4)+4
	LDAA	X,VEL-2		;HORIZ VELOCITY
	LDAB	X,VEL-1		;VERTICAL VELOCITY
MOVE2:	PSHA
	LDX	D,R6
	LDAA	X,P0V-1
	ANDA	I,0EF
	STAA	X,P0V-1
	LDX	D,R0
	PULA
	STAB	D,R8		;HOLD VERT
	CLRB
	ASLA
	SBCB	I,0
	ADDA	X,P0H-2		;ADD HORIZ LSB TO HORIZ STEP
	STAA	D,LSBH
	ADCB	X,P0H-1		;ADD H MSB TO STEP
	STAB	D,MSBH
	CMPB	I,0F5		;AT RIGHT SCREEN LIMIT?
	BEQ	5$
	CMPB	I,0FF
	BEQ	5$
3$:	STAA	X,P0H-2		;STORE BACK NEW HORIZ
	STAB	X,P0H-1
	BRA	6$
5$:	LDX	D,R6		;HIT BOADRDER-SET UP CONDITIONALS
	LDAA	X,P0V-1		;STATUS WORD
	ORAA	I,10		;SET BOARDER BIT
	STAA	X,P0V-1
6$:
;VERTICAL SET UP
	LDX	D,R6		;(P#*4)+4
	CLRB
	LDAA	D,R8		;GET BACK V STEP
	ASLA
	SBCB	I,0
	ADDA	X,P0V-4		;ADD TO LSB OF VERT
	STAA	D,LSBV
	ADCB	X,P0V-2
	STAB	D,MSBV
	PSHA			;SAVE
	PSHB
	LDAA	D,R5		;PLAYER NUMBER
	CMPA	I,2		;IS THIS FOR A CHUTE?
	BLT	10$
	TST	X,P0V+7		;SHUTE'S STATUS
	BPL	10$		;IF NOT ACTIVE, SKIP IT
	PSHB
	LDAB	X,P0V+7.	;ARE WE ON THE GROUND?
	ORAB	X,P0V-1		;CHECK FOR CRASH LANDING TOO
	LSRB			;CHECK LANDING BIT
	PULB			;BETTER GET THINGS BACK FIRST
	BCS	10$		;IF GROUND, DONT UPDATE SHUTE
	ADDB	I,0F		;SHUTE PIC IS ABOVE
	STAB	X,P0V+6		;SHUTE STAYS WITH THE MAN
	STAA	X,P0V+4
	LDX	D,R0
	LDAA	D,LSBH		;SET H OF SHUTE TO H OF MAN
	LDAB	D,MSBH
	STAA	X,P0H+2
	STAB	X,P0H+3
10$:	PULB			;GET V & VLSB BACK
	PULA
	LDX	D,R6
				;TOP OF SCREEN (NOT LIKELY!)
	STAA	X,P0V-4		;STORE BACK NEW VERTICALS
	STAB	X,P0V-2
	RTS

	.SBTTL	INIT & CLEAR ROUTINES
;
;INITIALIZATION ROUTINE
;
INIT:
	JSR	CLR2		;CLEAR ALL BUT SCORES
INIT2:	CLRB		;OFF SCREEN VERTICAL &0
	LDX	I,0
	LDAA	I,0F8		;OFF SCREEN POSITION HORIZ
	STAA	D,SELECT	;NO LETTERS
	STAA	D,SELECT+2
	STX	D,P0V+5		;V & PIC OF PLANE 2
	STX	D,P0V+1		;V & PIC OF PLANE 1
	STX	D,P0V+10.	;V & STAT OF DIVER 1
	STX	D,P0V+14.	;V & STAT OF DIVER 2
	STX	D,P0V+18.	;V & STAT OF CHUTE 1
	STX	D,P0V+22.	;V & STAT OF CHUTE 2
	STAA	D,BONUS		;SET BONUS NOT ACHIEVED
	STAA	D,BONUS+2
	LDAB	I,48		;SET DIRECTION & READY TO START BITS
	ORAB	D,P0V+3		;PLAYER 1 PLANE (BLACK)
	ANDB	I,0DE		;CLEAR DIRECTION JUST IN CASE
	STAB	D,P0V+3
	LDAB	I,08		;READY & DIRECTION FOR OTHER PLANE
	ORAB	D,P0V+7		;WHITE PLAYER
	ANDB	I,9E		;CLEAR SCREEN BIT (THATS ALL THATS LEFT)
	STAB	D,P0V+7		;STATUS
	STAA	D,P0H+1		;HORIZ OFF PLANE 1
	STAA	D,P0H+3		;PLANE 2
	STAA	D,P0H+5		;MAN 1
	STAA	D,P0H+7		;MAN 2
	STAA	D,P0H+9.	;SHUTE 1
	STAA	D,P0H+11.	;SHUTE 2
	STAA	E,WISTL1
	STAA	E,WISTL1+2
	STX	D,FLASH1	;NO FLASHING TARGETS
	STX	D,SOUNDL	;NO SOUNDS
	STX	D,SPLTIX+1
	STX	D,SHTTIX
	STX	D,SHTLEV
	STX	D,FLASH2	;NO FLASH
	LDAA	I,0E0
	STAA	D,VSTART	;SET STARTING VERTICAL OF PLANE
	STAA	D,VSTART+2
	LDAA	I,30		;SET STARTING VELOCITY
	STAA	D,VELST
	STAA	D,VELST+2
	JSR	OUT		;MOVE ALL OFF SCREEN
	INC	E,RTC
	JSR	OUT		;MOVE THE REST
	JSR	BACH		;INIT SOUNDS
;INITIALIZE TARGET
	LDAA	I,07
	STAA	D,WTS2		;BLACK! TARGET
	LDAA	I,23.
	STAA	D,BTS2		;WHITE! TARGET
	JMP	TARGET
;
;CLEAR SCORE
;
CLRSCR:
	LDX	I,400		;CLEAR SCORES
	BSR	CLEAN
	LDX	I,SCORE1-1	;SCORE TO 00
	LDAA	I,30
	STAA	X,1
	STAA	X,0
	ORAA	I,40		;BLACK
	LDX	I,SCORE2-1
	STAA	X,1
	STAA	X,0
;
;CLEAR SCREEN
;
CLR2:	LDX	I,0420		;ALL BUT SCORE LINE
CLEAN:	CLR	X,0
	INX
	CPX	I,0780		;END?
	BNE	CLEAN
	INC	E,CHANGE
	RTS
;
;A MISS! IX=DIVER 1 OR 2 ONLY
;
PENALTY:
	LDX	D,R0
	LDAA	X,MISSES-6
	BEQ	1$
	DEC	X,MISSES-6
;RESET (IF NECESSARY) BONUS LETTER
	LDAB	X,SELECT-6
	BMI	1$
	JSR	GTPTR
	LDAA	I,80		;BLACK
	LDAB	D,FLAG
	BNE	2$
	ORAA	I,40		;WHITE
2$:	STAA	X,0
	LDX	D,R0
	STAA	X,SELECT-6
1$:	RTS
	
	.SBTTL	SCORING ROUTINE

;*********************************************
; SCORING ROUTINE
;*********************************************
;*********************************************
;HOW MUCH DID WE GET
;*********************************************
SCORE:
	LDX	D,R0
	LDAB	X,WTS2-6	;GET SCORE PLACE
	LDAA	X,WIDTH-6	;GET WIDTH
	CMPA	I,3
	BEQ	33$
	DECB
33$:	PSHB
	LDAA	I,1F		;0-1F
	SBA			;1F-0
	ASLA
	ASLA
	ASLA			;0-F8
	CMPA	X,P0H-1		;COMPARE TO 'HIGH' LIMIT (LEFT)
	BCS	34$
	LDAB	X,WIDTH-6	;COMPUTE 'LOW' LIMIT (WHAT'S LEFT?)
	INCB
	ASLB
	ASLB
	ASLB			;RIGHT OF COURSE!!
	SBA
	SUBA	I,2
	CMPA	X,P0H-1		;COMPARE TO WHAT'S LEFT!
	BCS	40$
34$:	PULB
	BRA	PENALTY
;
;GOOD HIT ON TARGET
;
;SET PROPER COLOR ON SELECT LETTER
40$:	LDAB	X,SELECT-6	;GET LETTER
	BMI	43$
	JSR	GTPTR
	LDAA	X,0		;LETTER
	LDAB	D,FLAG
	BEQ	41$		;= IS WHITE
	ANDA	I,0BF		;BLACK SET
	BRA	42$
41$:	ORAA	I,40		;WHITE SET
42$:	STAA	X,0
43$:	LDX	D,R0
	LDAA	I,0FF
	STAA	X,SELECT-6	;RESET
;
;CHECK BONUS STATUS
;
	CLRB
	LDAA	X,BONUS-6
	BNE	47$		;IF NE, ALREADY ACHIEVED
	JSR	GTPTR		;NOT ACHIEVED, CHECK SCREEN
	LDAA	I,8.		;8 PLACES
10$:	LDAB	X,0
	BMI	47$		;IF -, A BLOCK IS STILL THERE
	INX
	DECA
	BNE	10$		;CHECK ALL 8 PLACES
;CHARGE MUSIC
	LDX	I,CHAN0
	STX	D,HPTR
	INCA
	STAA	D,CNTRL
	LDX	D,R0		;BONUS JUST MADE, SET STATUS.
	LDAA	I,10.		;10 FLASHES
	STAA	X,BONUS-6
;IF GAME JUST ENDED, COULD BE SOME SCORE
47$:	LDX	D,R0		;LOAD IT HERE IF FROM 10$
	LDAB	X,WTS1-6	;GET SCORE
	LDAA	D,GMSTAT	;NO SCORE IF ATTRACT
	BEQ	46$
	ADDB	X,SCRBUF-6
	STAB	X,SCRBUF-6
46$:	PULB
	STAB	X,FLASH1-6
	LDAA	I,9.
	STAA	X,FLASH1-5
;NOW SET NEW TARGET NEED BIT
	LDX	D,R6
	LDAA	X,P0V-9.
	ORAA	I,2
	STAA	X,P0V-9.
UPGRADE:LDX	D,R0
	LDAA	X,VELST-6	;ON A GOOD LAND, UPGRADE-----
	ADDA	I,5
	BMI	40$		;7F IS MAX VELOCITY
	STAA	X,VELST-6	;HIS STARTING VELOCITY & ----
40$:	LDAA	X,VSTART-6
	SUBA	I,09
	CMPA	I,60
	BCS	50$
	STAA	X,VSTART-6	;HIS STARTING HEIGHT
50$:	RTS
CKB:	LDAA	X,BONUS-6
	BEQ	47$
	LDAA	D,RTC
	ANDA	I,0F		;FLASH RATE
	BNE	47$		;TIME
	DEC	X,BONUS-6	;DEC FLASH COUNTER
	BNE	41$		;IF NOT 0,FLASH
	LDAA	I,80		;SET STATUS TO DONE (80)
	STAA	X,BONUS-6
	CLRB
	JSR	GTPTR		;GET OUTPUT LOCATION (SETS COLOR FLAG)
	STX	D,OUTWH		;SAVE
	LDX	I,2*28+MINTBL	;GET MESSAGE POINTER PLACE
	LDAB	D,LANG		;LANG OFFSET
	ASLB			;X2
	JSR	OFFSET
	LDX	X,0		;GET MESSAGE LOCATION
	PSHA
	JMP	DSPLY2
41$:	CLRB
	JSR	GTPTR		;GET SCREEN POINTER
	LDAA	I,8.
42$:	LDAB	X,0		;CHANGE COLOR
	EORB	I,40
	STAB	X,0
	INX
	DECA
	BNE	42$
47$:	RTS
;BUFFERED SCORE ROUTINE
SCR2:	LDX	D,R0
	LDAB	X,SCRBUF-6
	BEQ	SCR2-1		;IF 0, NO SCORE TO ADD
	DECB			;ADD 10 PTS THIS TIME
	PSHB			;SAVE
	ANDB	I,0F
	CMPB	I,0F		;COUNT DECIMAL
	PULB
	BNE	2$
	SUBB	I,06
2$:	STAB	X,SCRBUF-6	;10 PTS
	LDAB	X,BONUS-6	;BONUS?
	STAB	D,TIX		;SAVE FOR NOW
	LDAA	I,30
	STAA	D,FLAG
	BSR	SCRPTR
	CLRB
5$:	LDAA	X,0		;GET SCORE AT THIS LOC
	ANDA	I,0F		;ONLY THE #
	TST	E,TIX
	BEQ	6$		;DOUBLE BONUS?
	ADDA	I,1		;ADD 10 PTS FOR DOUBLE BONUS
6$:	ADDA	I,1		;ADD 10 PTS
	DAA
	PSHA			;SAVE FOR CARRY
	ANDA	I,0F		;ONLY LSB
	ORAA	D,FLAG		;MAKE ASCII & ADD COLOR
	STAA	X,0		;BACK TO SCREEN
	PULA
	ANDA	I,0F0		;ANY CARRY?
	BNE	7$		;IF NO, FINISH
;
;CHECK FOR EXTENDED PLAY
;
	LDAA	D,EXPL		;EXPLAY SWITCH ON?
	BMI	8$
	BSR	SCRPTR		;GET OUTPUT LOC THIS PLAYER
	DEX
	DEX			;POINT TO THOUS
	LDAA	X,0		;GET THOUS
	ASLA
	ASLA
	ASLA
	ASLA			;SHIFT TO MSB'S
	LDAB	X,1		;GET HUNDS
	ANDB	I,0F		;STRIP OFF COLOR
	ABA			;1 BYTE VALUE
	CMPA	D,EXSCR		;ACHIEVE SCORE?
	BCS	8$		;IF CARRY, NOT ACHIEVED YET
	LDAA	D,CNFLG		;NO COIN AFTER FREE PLAY?
	BNE	8$		;IF NE, NO
	LDX	D,R0		;ALRADY PAID OFF?
	LDAB	X,EXPST-6
	BNE	8$		;IF NOT 0, YES
	LDAA	I,2
	STAA	X,EXPST-6	;THIS IS IT-GIVE IT TO HIM
	INC	E,CREDIT		;FREE PLAY
	LDAB	I,8.			;START EXPLAY SOUND
	STAB	D,EXCNT
8$:	RTS
7$:	DEX			;CARRY IS AT MOST 1 SO......
	INCB
	CLR	E,TIX		;ONLY DOUBLE FOR THE 10 PTS, NOT THE CARRY
	BRA	5$
;GET POINTER TO SCORE
SCRPTR:	LDX	I,SCORE1-1
	LDAA	D,R5
	LSRA
	BCC	1$
	LDX	I,SCORE2-1
	LDAA	I,40
	ORAA	D,FLAG		;WHITE
	STAA	D,FLAG
1$:	RTS
;*********************************************
; OUTPUT ROUTINE
;************************************************
CKM2A:	.BYTE 8E		;CHECKSUM 3C00-3FFF
OUT:	STAA	E,STRETCH	;STRETCH PLANES
	LDAA	D,GMSTAT
	BPL	15$
	CLR	E,FLAG
	LDAB	I,3C		;CHAR OUT
	LDX	I,MISOT1
	LDAA	I,8.		;16 MAX, 8 BOTTON LINE
14$:	TST	E,FLAG
	BNE	18$
	CMPA	D,MISSES
	BRA	17$
18$:	CMPA	D,MISSES+2
17$:	BGT	11$
	STAB	X,0
	BRA	12$
11$:	CLR	X,0		;NO MAN OUT
12$:	DEX
	DECA
	BNE	14$
13$:	LDAA	D,FLAG		;IS THIS THE SECOND PASS?
	BNE	15$
	LDAB	I,7C		;NO, SO SET UP FOR SECOND PASS
	STAB	D,FLAG		;SET FLAG FOR LAST PASS
	LDX	I,MISOT2
	LDAA	I,8.
	BRA	14$
15$:	LDAA	D,RTC		;SET UP FRAME COUNT
	ANDA	I,1
	BNE	1$
	LDAB	D,P0V+1		;SET DIRECTION BIT
	ANDB	I,10		;DIRECTION BIT ONLY
	LDAA	D,P0V+10.	;DIVER 1 VMSB
	STAA	D,P0VPOS+4	;OUTPUT
	LDAA	D,P0H+5		;DRIVER 1 HMSB
	STAA	D,P0HPOS+2	;OUTPUT
	LDAA	D,P0V+22.	;SHUTE 2 VMSB
	STAA	D,P0VPOS+6	;OUTPUT
	LDAA	D,P0H+11.	;SHUTE 2 HMSB
	STAA	D,P0HPOS+3	;OUTPUT
	LDAA	D,P0V+9.	;DIVER 1'S PIC
	CMPA	I,4
	BGT	10$
	ABA			;ADD IN DIRECTION IF NEEDED
10$:	STAA	D,P0PIC+4	;OUTPUT
	LDAA	D,P0V+21.	;SHUTE PIC
	STAA	D,P0PIC+6	;OUTPUT
	RTS
1$:	LDAA	D,P0V+14.	;DIVER 2 VMSB
	LDAB	D,P0V+5		;GET DIR OF PLANE
	ANDB	I,10		;DIRECTION BIT ONLY
	STAA	D,P0VPOS+6	;OUTPUT
	LDAA	D,P0H+7		;DIVER 2 HMSB
	STAA	D,P0HPOS+3	;OUTPUT
	LDAA	D,P0V+18.	;SHUTE 1 VMSB
	STAA	D,P0VPOS+4	;OUTPUT
	LDAA	D,P0H+9.	;SHUTE 1 HMSB
	STAA	D,P0HPOS+2	;OUTPUT
	LDAA	D,P0V+13.	;DIVER 2 PIC
	CMPA	I,4
	BGT	20$		;FALLING PIC?
	ABA			;IF YES, ADD IN DIRECTION
20$:	STAA	D,P0PIC+6	;OUTPUT
	LDAA	D,P0V+17.	;SHUTE 1 PIC
	STAA	D,P0PIC+4	;OUTPUT
	RTS
	.PAGE
;
;GET OUTPUT POINTER.  PASS OFFSET IN B, RETURN SCREEN POINTER IN IX
;
GTPTR:	LDX	I,SKDVW		;GUESS WHITE PLAYER
	CLR	E,FLAG
	LDAA	D,R5		;CHECK PLAYER #
	LSRA			;WHICH PLAYER?
	BCS	OFFSET
	LDX	I,SKDVB
	COM	E,FLAG		;FLAG-IF BLACK
;****************************************
; OFFSET
;****************************************
OFFSET:	STX	D,R2
	ADDB	D,R3
	STAB	D,R3		;NEW VALUE
	LDAB	D,R2
	ADCB	I,0		;ADD CARRY BIT
	STAB	D,R2		;SAVE
	LDX	D,R2
	RTS
;
;FLASH SELECTED LETTER
;
LETTER:
	LDX	D,R0
	LDAB	X,SELECT-6	;WHICH (0-7)
	BMI	20$
	PSHB
	BSR	GTPTR
	STX	D,TIX		;FLASH PLACE
	PULB			;WHICH BACK
	LDAA	X,0
	BPL	10$		;LETTER OUT ALREADY
	LDX	I,LETTBL	;GET LETTER
	BSR	OFFSET
	LDAA	X,0		;GET LETTER
	LDX	D,TIX
	STAA	X,0		;PUT IT OUT JUST IN CASE
10$:	LDAB	D,RTC
	ANDB	I,07
	BNE	20$
	EORA	I,40		;FLASH
	STAA	X,0
20$:	RTS

	.SBTTL	TARGET DISPLAY ROUTINE
;
;DISPLAY & UPDATE TARGETS AS NECESSARY 1 BLACK, 1 WHITE
;
TARGET:	CLR	E,FLAG		;CLEAR THE FLAG (OBVIOUSLY)
	LDX	I,TOPLINE
	LDAB	I,0FB
	LDAA	I,32.
1$:	STAB	X,0		;GROUND
	INX
	DECA
	BPL	1$
;
;NOW PUT A SCORE IN EACH PART
;
TARG1:  LDAA	I,40
	STAA	D,R4
	LDX 	I,2
TARG2:	STX	D,INWH
	LDAA	D,FLAG		;IF FLAG 0
	BEQ 	TARG3		;DO OUTPUT
	LDAA	X,FLASH1	;FLASHING?
	BNE	NXTG
TARG3:	LDAB	X,WTS2		;GET WIDTH
	LDX	I,TOPLINE	;GROUNT LINE
	BSR	OFFSET		;OFFSET POINTER
	STX	D,OUTWH
	LDAA	D,GMSTAT	;DON'T WRITE 'OUT' IF ATTRACT
	BEQ	11$
	LDX 	D,INWH
	LDAA	X,MISSES	;READ # OF MISSES
	BNE	11$		;IF MISSES 0, WRITE 'OUT'
	LDAA	I,94		;THE 'T'
	ORAA	D,R4		;OR IN COLOR
	LDX	D,OUTWH		;GET OUTPUT POINTER
	STAA	X,2		;PUT LETTER OUT
	LDAA	I,08F		;THE 'O'
	LDAB	I,95		;THE 'U'
	BRA	20$		;GO TO OUTPUT
11$:	
	LDAA	I,0B0		;0 OUT
	ORAA	D,R4		;PUT IN THE COLOR
	LDX	D,OUTWH
	STAA	X,2		;OUTPUT ONE'S PLACE 0
	LDX	D,INWH		;GET INPUT POINTER
	LDAA	X,WTS1		;GET TARGET SCORE
	TAB
;CONVERT FROM A 1 BYTE IN A N 2 BYTES ASCII IN A & B
	SEC			;TOP 4 BITS INTO BOTTOM 4
	RORA			;1XXXXXXX
	ASRA			;11XXXXXX
	LSRA			;011XXXXX
	SEC			;ALMOST THERE
	RORA			;1011XXXX
	CMPA	I,0B0		;IF LEADING 0, PUTOUT A BLANK
	BNE	15$
	LDAA	I,080		;BLANK BLOCK
15$:	ANDB	I,0F		;ONLY 4 BOTTOM BITS
	ORAB	I,0B0		;ASCII OF BOTTOM BITS
20$:	LDX	D,OUTWH		;OUTPUT POINTER
	ORAA	D,R4		;OR IN COLOR
	ORAB	D,R4		;COLOR
	STAA	X,0
	STAB	X,1
	LDAB	I,080		;BLANK BLOCKS
	ORAB	D,R4		;PUT IN COLOR
	LDX	D,INWH		;INPUT POINTER
	LDAA	X,WIDTH		;GET WIDTH OF TARGET
RSTTG:	PSHB
	LDX	D,OUTWH		;GET OUTPUT POINTER
	DEX
	LDAB	I,0FB		;GROUND PIECE
	STAB	X,0
	STAB	X,4		;OUTPUT GROUND.....
	STAB	X,5		;...GUESSED AT SIZE 3
	SUBA	I,3
	PULB			;GET BACK OUTPUT BLOCK CHAR
	BEQ	2$
	STAB	X,0		;AT LEAST 4 WIDE
	DECA
	BEQ	2$
	STAB	X,4		;NOW KNOW AT 5 WIDE
	DECA
	BEQ	2$
	STAB	X,5		;IT WAS 6
2$:NXTG:	LDX	D,INWH
	DEX
	DEX
	BNE	3$
	CLR	E,R4
	JMP	E,TARG2
3$:	RTS
	.SBTTL	NEW TARGET ROUTINE
;
;NEW TARGET NEEDED
;
NEWTAR:	PSHB			;SAVE STATUS
	STX	D,TIX
	LDX	D,R0
	LDAB	X,WTS2-2
	SUBB	I,2
	LDX	I,TOPLINE-80
	JSR	OFFSET
	CLR	X,0
	CLR	X,20
	INX
	LDAA	I,6
	LDAB	I,0FB
4$:	CLR	X,0		;CLEAR OLD FLAG
	CLR	X,20
	CLR	X,40
	CLR	X,60
	STAB	X,80
	INX
	DECA
	BNE 	4$
	LDX	D,TIX
	JSR	RAND
1$:	INCA
	ANDA	I,1F
	CMPA	I,1		;0 NO GOOD
	BLE	1$
	CMPA	I,19
	BGE	1$		;OTHER EDGE?
	TAB
	SUBB	D,WTS2		;TOO CLOSE?
	BPL	2$
	NEGB
2$:	CMPB	I,6
	BLT	1$		;YES
	TAB
	SUBB	D,BTS2		;OTHER?
	BPL	3$
	NEGB
3$:	CMPB	I,6
	BLT	1$
20$:	PULB			;TARGET OK
	ANDB	I,0FD		;CLEAR NEW BIT
	CMPA	I,0D		;WHICH DIRECTION TO START?
	BLE	25$
	ANDB	I,0BF		;SET BIT L TO R
	BRA	30$
25$:	ORAB	I,040		;SET BIT R TO L
30$:	STAB	X,P0V-1
	LDAB	X,P0V-2
	LDX	D,R0
	STAA	X,WTS2-2	;STORE NEW PLACE
	LDAA	I,1
	STAA	X,WTS1-2	;RESET SCORE VALUE
	BSR	SETWIT
	STAB	X,WIDTH-2
	LDX	D,R6
	RTS
	.SBTTL	FLASH TARGET
;
;FLASH HIT SQUARE
;
FLHIT:	LDX	D,R0
	LDAA	X,FLASH1-5		;STILL FLASHING?
	BNE	10$
5$:	JMP	E,SCR2		;DO SCORE ADD
10$:	LDAA	D,RTC			;TIME?
	ANDA	I,07
	BNE	5$
	LDAA	X,WIDTH-6
	LDAB	X,FLASH1-6
	LDX	I,TOPLINE
	JSR	OFFSET
30$:	LDAB	I,40			;COLOR BIT
	EORB	X,0
	STAB	X,0
	INX
	DECA
	BNE	30$
	BRA	5$
;
;SET WIDTH OF TARGET ACCORDING TO HEIGHT PASSED IN B
;
SETWIT:
	ADDB	I,18		;HEIGHT OF PASSED OBJECT + 18
	BMI	1$		;NOT UNDER 80
	LDAB	I,80
1$:	LSRB			;5 SHIFTS & ...
	LSRB
	LSRB
	LSRB
	LSRB
	DECB			;A DEC & ...
	RTS			;...GIVES 6 THRU 3 ACCORDING TO PASSED HEIGHT
	.PAGE
;POLY COUNTER FOR "RANDOM" NUMBERS
RAND:	LDAA	D,POLY
	BEQ	2$		;0 IS LOCKUP-SO SET 1
	BITA	I,4
	BEQ	1$
	EORA	I,40		;AN EORA
1$:	ASLA
	BPL	3$
2$:	INCA			;+1
3$:	STAA 	D,POLY
	RORA
	RTS
	.SBTTL	LIGHT LIGHTS ROUTINE
;
;PASS IN B CONTROL WORD 1=ON, 0=OFF (OF SKYDIVER LIGHTS)
;
LTSON:
;
;BIT POSITION 7 THRU 0, LEFT TO RIGHT;
;7=S
;6=K
;5=Y
;4=D
;3=I
;2=V
;1=E
;0=R
	LDX	I,LTTBL			;EIGHT ADDRESSS TABLE
1$:	STX	D,TIX			;HOLD IT
	LDX 	X,0			;LIGHT ADDRESS
	ASLB				;CARY IS ON
	BCS	2$
	STAA	X,0			;ADDR=OFF
	BRA	3$
2$:	STAA	X,1			;ADDR+1=ON
3$:	LDX	D,TIX
	INX				;POINT TO NEXT TABLE ENTRY
	INX
	CPX	I,LTTB			;ALL 8 DONE?
	BNE	1$			;IF NO CONTINUE
	RTS
	.SBTTL	HIGH SCORE ROUTINES
;**********************************************************************
;USED TO CONVERT ASCII TO A 1 BITE BCD
;ALSO COMPARES TO 'TEMP'
;*********************************************************************
CMPR:	LDAA	X,0		;MSB DIGIT ASCII
	ASLA			;SHIFT INTO MSB (HALF BYTE) BCD
	ASLA
	ASLA
	ASLA
	LDAB	X,1		;LSB DIGIT ASCII
	ANDB	I,0F		;LOWER HALF BYTE BCD
	ABA			;A=1 BYTE BCD DIGIT
	CMPA	D,TIX		;COMPARE TO TEMP
	RTS
;*********************************************************
;**********      NEW HIGH SCORE CHECK             ********
;*********************************************************
HISCRR:	LDX	I,SCORE1-5	;SCORE 1 FIRST
	CLR	E,R2
17$:	LDAA	D,HISCRM	;MSB OF HIGH SCORE
	STAA	D,TIX
	BSR	CMPR
	BEQ	12$		;DIGITS SAME, TRY NEXT
	BCS	11$		;THIS SCORE LOWER, SKIP IT
;MAKE CHANGE - NEW HIGH SCORE
14$:	STAA	D,HISCRM	;MUST PASS IX+4 OF SCORE & .....
	INX			;A=BCD OF MSB'S
	INX
	BSR	CMPR		;A CHEAP WAY TO BCD DIGITS
	STAA	D,HISCRH	;MIDDLE DIGITS
	INX
	INX
	BSR	CMPR
	STAA	D,HISCRL
11$:	LDAA	D,R2		;DONE
	BNE	HIOUT
10$:	LDX	I,SCORE2-5
	INC	E,R2
	BRA	17$
12$:	INX			;MIDDLE DIGITS CHECK
	INX
	LDAA	D,HISCRH
	STAA	D,TIX
	BSR	CMPR
	BEQ	13$		;SAME - MUST CHECK LOWER
	BCS	11$		;FORGET IT, SMALLER
15$:	DEX
	DEX			;PUT IX BACK TO SCORE+4.....
	BSR	CMPR		;GET A=MSB DIGIT.....
	BRA	14$		;MAKE CHANGE
13$:	INX
	INX
	LDAA	D,HISCRL
	STAA	D,TIX
	BSR	CMPR
	BLS	11$		;IF EQ OR CARRY, NO CHANGE
	INX			;PUT IX BACK TO SCORE+2.....
	INX
	BRA	15$		;THEN.......
HIOUT:	LDX	I,HSCRPL-5
	LDAA	D,HISCRM
	ANDA	I,0F0
	BNE	1$			;GO DO OUTPUT
	DEX				;NEW START POSITION
	LDAA	D,HISCRH
	BNE	2$
	INX				;M&H BOTH 0
	BRA	1$
2$:	ANDA	I,0F0			;M=0, H NOT 0
	BNE	1$			;IF MSB NOT 0, OK
	DEX				;ELSE FIX
1$:	LDAA	D,HISCRM
	CLR	E,R2
	BSR	FX2
	LDAA	D,HISCRH
	BSR	FX2
	LDAA	D,HISCRL
	BSR	FX2
	LDAB	I,04
DSPLY:	PSHA			;SAVE A
	ASLB			;X2 (WORD)
	BCC	1$
	NEGB			;X2 OF -#
	BRA	2$		;NO LANG
1$:	ASLB			;X4
	ASLB			;X8 (4 LANG)
	ADDB	D,LANG		;OFFSET TABLE BY LANGUAGE
2$:	LDX	I,MINTBL
	TBA
	JSR	OFFSET
	LDX	X,0		;GET OUTPUT LOCATION
	LDAA	X,0		;IS FIRST 2 BYTES OF MESSAGE
	STAA	D,OUTWH
	INX
	LDAA	X,0
	STAA	D,OUTWH+1
	INX
DSPLY2:	STX	D,INWH		;SAVE POINTER TO MESSAGE
	TST	E,IRQ
3$:	LDAA	I,-1		;COUNT IS DEFAULT 1 CHAR
	STAA	D,COUNT
	LDX	D,INWH
31$:	LDAA	X,0			;GET FIRST CHAR
	BEQ	4$		;IF 0, END OF MESSAGE
	BMI	5$		;IF -, REPEAT COUNT
	INX			;WE HAVE A GOOD CHAR
	STX	D,INWH		;SAVE INPUT POINTER
	LDX	D,OUTWH
32$:	TST	E,FLAG		;BLACK OR WHITE?
	BPL	33$
	ORAA	I,40		;SET BLACK BIT
33$:	STAA	X,0
	INX
	INC	E,COUNT		;COUNT # OF CHARS
	BMI	32$		;IF -, STILL MORE
	STX	D,OUTWH		;SAVE OUTPUT POINTER
	BRA	3$
5$:	STAA	D,COUNT		;WE READ A COUNT SO SAVE IT AND .....
	INX			;GO BACK FOR NEXT CHAR
	BRA	31$
4$:	PULA			;WE'RE DONE.  GET A & LEAVE
	RTS
FX2:	PSHA				;MAKE A COPY OF INPUT
	RORA				;GET LEFT DIGIT
	RORA
	RORA
	RORA
	BSR	FIXSR			;ADJUST OUTPUT
	STAA	X,0			;OUTPUT LEFT DIGIT
	INX
	PULA				;GET COPY OF INPUT
	BSR	FIXSR			;ADJUST IT
	STAA	X,0			;OUTPUT RIGHT DIGIT
	INX
	RTS
FIXSR:	ANDA 	I,0F			;CONVERT DIGIT TO ASCII
;	BLANK 0?
	BNE	2$
	TST	E,R2		;BLANK LEADING 0

	BNE	2$
	CLRA
	RTS
2$:	ADDA	I,70			;WHITE CHAR NOW
	STAA	D,R2			;NO MORE 0 BLANK
1$:	RTS
;
;EXTENDED PLAY SOUND ROUTINE
;SHOULD BE  PART OF NMI ROUTINE, BUT NO ROOM LEFT THERE
;
EXGOT:
	JSR	RAND		;TOOK THIS STATEMENT AWAY FROM NMI START
	LDAA	D,EXCNT		;SOUND?
	BEQ	20$
	LDAB	I,0A		;SET OCTAVE
	STAB	D,OCTL
	LDAB	D,EXSND		;GET 'NOTE' OUT
	ADDB	I,4
	STAB	D,EXSND
	STAB	D,NOTEL		;SAVE AND OUTPUT NOTE
	BCC	20$		;IF CARRY, 1 PASS COMPLETE
	DECA
	STAA	D,EXCNT		;SAVE NEW COUNT
	BNE	20$		;DONE?
	STAA	D,OCTL		;IF DONE, PUT THE 0 IN TO SHUT NOTE UP
20$:	RTS
	.SBTTL	AUTO JUMP & WINDSOCK ROUTINES,LAMP LIGHTER
;
; AUTO JUMP IX=DIVER 1 OR DIVER 2 ONLY
;
AUTOJMP:LDX	D,R6
	LDAA	D,TIME		;ATTRACT OR GAME
	BNE	15$		;READY?
	LDAA	X,P0V-9.
	BMI	15$
	LDAB	X,P0V-1		;GET STATUS OF DIVER
	BMI	10$		;ALREADY IN AIR
	LDAB	X,P0V-9.
	LDX	D,R0
;GET TARGET LOC -> MOTION LOC
	LDAA	X,WTS2-6	;GET JUMP POINT FROM TARGET
	NEGA
	ASLA
	ASLA
	ASLA
	BITB	I,40		;R TO L
	BEQ	20$
	SUBA	I,40		;SHIFT
20$:	SUBA	X,P0H-5
	BPL	2$
	NEGA
2$:	CMPA	I,30		;CLOSE TO JUMP POINT?
	BHI	15$
	LDX	D,R6
;NO JUMP IF AT EDGE
	BITB	I,0A		;EDGE OR OFF?
	BNE	15$
	JMP	JUMPED		;SET JUMP BITS
10$:	BITB	I,8
	BNE	15$
	LDAA	X,P0V-2		;GET VERTICAL
	CMPA	I,85
	BHI	15$
	LDAA	X,P0V+7		;SET SHUTE BUTTON
	ORAA	I,20
	STAA	X,P0V+7
15$:	RTS
FILLR	=4000-.
	.REPT FILLR
	.BYTE 0
	.ENDR
	.=7A03
CKM3:	.BYTE 0DB			;CHECKSUM 7800-7BFF
WINDSET:
	LDAA	D,RTC		;TIME FOR NEW WIND?
	ANDA	I,07
	BEQ	1$
	RTS
1$:	JSR	RAND
	ANDA	I,1		;SOME RANDOM (????) VALUE
	LDAB	D,POLY
	BPL	10$
	NEGA
10$:	CLRB
	ADDA	D,WINDV
	PSHA
	BPL	11$
	NEGA			;!A!
11$:	CMPA	I,7
	PULA
	BGT	12$
	STAA	D,WINDV
12$:	TSTA
;
;WIND SOCK OUT
;PUSH PICTURES ON STACK AS FOLLOWS
;8 PICTURE STAMPS, INCLUDING BLANKS
;ARE PUSHED. THE TOP ROW THEN THE BOTTOM
;
	BEQ	30$
	BMI	50$
	CMPA	I,4
	BLE	40$
	LDAA	I,1C		;FULL UP PIC,LEFT WIND
	PSHA
	DECA
	PSHA
	LDAA	I,27
	PSHA
	PSHB
	PSHB
	LDAA	I,1D
	PSHA
29$:	LDAA	I,27
	PSHA
	PSHB
	BRA	OUTS
30$:	LDAA	X,22.		;WHICH PIC IS OUT NOW?
	CMPA	I,40		;OUTPUT CORRECT ZERO WIND PIC
	BEQ	35$
				;LAST PICT WAS TO RIGHT
	PSHB
	LDAA	I,1D
	PSHA
	LDAA	I,2A
	PSHA
	PSHB
	PSHB
	LDAA	I,1D
	PSHA
	LDAA	I,2B
32$:	PSHA
	PSHB
	BRA	OUTS
35$:	LDAA	I,20		;LAST PIC WAS TO LEFT
	PSHB
	PSHA
	LDAA	I,27
	PSHA
	LDAA	I,21
	PSHB
	PSHB
	PSHA
	BRA	29$
40$:	LDAA	I,1E		;LOW WIND PIC TO LEFT
	PSHA
	LDAA	I,1B
	PSHA
	LDAA	I,27
	PSHA
	PSHB
	LDAA	I,1F
	PSHA
	LDAA	I,1D
	PSHA
	BRA	29$
50$:	PSHB		;WIND IS TO RIGHT, BUT HOW MUCH?
	CMPA	I,0FC
	BHI	60$
	LDAA	I,1D		;FULL UP WIND TO RIGHT
	PSHA
	LDAA	I,25
	PSHA
	INCA
	PSHA
	PSHB
	LDAA	I,1D
	PSHA
	LDAA	I,27
	BRA	32$
60$:	LDAA	I,1D
	PSHA
	LDAA	I,25		;PARTIAL WIND TO RIGHT
	PSHA
	LDAA	I,28
	PSHA
	PSHB
	LDAA	I,1D
	PSHA
	LDAA	I,27
	PSHA
	LDAA	I,29
	PSHA
;
;OUTPUT USING STACK
;
OUTS:	LDX	I,TOPLINE-80+5		;LOCATION
	LDAB	D,WTS2
	JSR	OFFSET
	STX	D,TIX
	LDX	I,TOPLINE-80+5		;LOCATION OF WINDSOCK
	LDAB	D,BTS2
	JSR	OFFSET
	STX	D,INWH

	LDAB	I,4
1$:	PULA
	LDX	D,TIX
	STAA	X,28.
	DEX
	STX	D,TIX
	LDX	D,INWH
	ORAA	I,40
	STAA	X,28.
	DEX
	STX	D,INWH
	DECB
	BNE	1$
	LDAB	I,4
2$:	PULA
	LDX	D,TIX
	STAA	X,0
	DEX
	STX	D,TIX
	LDX	D,INWH
	ORAA	I,40
	STAA	X,0
	DEX
	STX	D,INWH
	DECB
	BNE	2$
	LDAA	I,1D		;BOTTOM OF POLE
	LDAB	I,27
	LDX	D,TIX
	STAA	X,42
	STAB	X,43
	STAA	X,62
	STAB	X,63
	ORAA	I,40
	ORAB	I,40
	LDX	D,INWH
	STAA	X,42
	STAB	X,43
	STAA	X,62
	STAB	X,63
	RTS
	.PAGE
	.SBTTL	TABLES
	.RADIX 16
;SKYDIVER # TO LETTER TABLE
LETTBL:	.BYTE 19.,11.,25.,4,9.,22.,5,18.
;LIGHT (SKYDIVER) ADDRESSES)
LTTBL:	.WORD 0800,0802,0808,080A
	.WORD 2002,2004,2006,2008
;SEQUENCE LIGHTS
LTTB:	.BYTE	81,0C3,0E7,0FF,7E,3C,18,00
	;MESSAGE TABLE 0=ENGLISH,1=FRENCH,2=SPANISH,3=GERMAN
MINTBL:	
	.WORD MES0		;GAME OVER
	.WORD MES1		;FRENCH
	.WORD MES2		;SPANISH
	.WORD MES3		;GERMAN
	.WORD MES4		;CREDIT FOR
	.WORD MES5		;F
	.WORD MES6		;S
	.WORD MES7		;G
	.WORD MES8		;PUSH STARTS
	.WORD MES9		;F
	.WORD MES0A		;S
	.WORD MES0B		;G
	.WORD MES0C		;INSERT COINS
	.WORD MES0D		;F
	.WORD MES0E		;S
	.WORD MES0F		;G
	.WORD MES10		;HIGH SCORE
	.WORD MES11		;F
	.WORD MES12		;S
	.WORD MES13		;G
	.WORD MES14		;TEST OK
	.WORD MES15		;ERROR
	.WORD MES16		;BLANK LINE
	.WORD MES17		;COIN TIME
	.WORD MES18		;COIN
	.WORD MES19		;F
	.WORD MES1A		;S
	.WORD MES1B		;G
	.WORD MES1C		;PLAYER
	.WORD MES1D		;F
	.WORD MES1E		;S
	.WORD MES1F		;G
	.WORD MES20		;ADD S TP PLAYERS
	.WORD MES21		;F
	.WORD MES22		;S
	.WORD MES23		;G
	.WORD MES24		;MISSES PER PLAYER
	.WORD MES25
	.WORD MES26
	.WORD MES27
	.WORD MES28		;2X SCORE
	.WORD MES28
	.WORD MES28
	.WORD MES28
	.WORD MES29	;EXTENDED PLAY FOR
	.WORD MES2A
	.WORD MES2B
	.WORD MES2C
	;MESSAGES
;GAME OVER (0)
MES0:	.BYTE 06,6C
	.ASCIZ	/GAME@OVER/		;ENGLISH
MES1:	.BYTE 06,6A
	.ASCIZ	/FIN@DE@PARTIE/		;FRENCH
MES2:	.BYTE 06,6B
	.ASCIZ	/FIN@PARTIDA/		;SPANISH
MES3:	.BYTE 06,6C
	.ASCIZ	/SPIELENDE/		;GERMAN
;CREDIT FOR X PLAYS (1)
MES4:	.BYTE 05,27
	.ASCII	/CREDIT@FOR/		;ENGLISH
	.BYTE -3
	.ASCIZ /@PLAYS/
MES5:	.BYTE 05,29
	.ASCII	/CREDIT/		;FRENCH
	.BYTE -3
	.ASCIZ /@PARTIE/
MES6:	.BYTE 05,26
	.ASCII	/CREDITO@DE/		;SPANISH
	.BYTE -3
	.ASCIZ /@JUEGOS/
MES7:	.BYTE 05,24
	.ASCII	/GUTSCHRIFT@FUER/	;GERMAN
	.BYTE -3
	.ASCIZ /@SPIELER/
;PUSH STARTS (2)
MES8:	.BYTE 05,4B
	.ASCIZ	/PUSH@START/		;ENGLISH
MES9:	.BYTE 05,47
	.ASCIZ	/APPUYER@SUR@STARTS/	;FRENCH
MES0A:	.BYTE 05,4B
	.ASCIZ	/PLUSAR@START/		;SPANISH
MES0B:	.BYTE 05,46
	.ASCIZ	/STARTKNOEPFE@DRUECKEN/	;GERMAN
;INSERT COINS (3)
MES0C:	.BYTE 05,2A
	.ASCIZ	/INSERT@COINS/		;ENGLISH
MES0D:	.BYTE 05,25
	.ASCIZ	/INTRODUIRE@LES@PIECES/	;FRENCH
MES0E:	.BYTE 05,26
	.ASCIZ	/INTRODUCIR@MONEDAS/	;SPANISH
MES0F:	.BYTE 05,27
	.ASCIZ	/MUENZEN@EINWERFEN/	;GERMAN
;HIGH SCORE (4)
MES10:	.BYTE 04,4B
	.ASCIZ	/HIGH@SCORE/		;ENGLISH
MES11:	.BYTE 04,49
	.ASCIZ	/MEILLEUR@SCORE/	;FRENCH?
MES12:	.BYTE 04,4A
	.ASCIZ	/ALTA@PUNTAJE/		;SPANISH?
MES13:	.BYTE 04,49
	.ASCIZ	/BESTE@PUNKTZAHL/	;GERMAN?
;COIN (6)
MES18:	.WORD COINM+0A
	.ASCIZ /COIN/	;ENGLISH
MES19:	.WORD COINM+09
	.ASCIZ /PIECE/	;FRENCH
MES1A:	.WORD COINM+08
	.ASCIZ /MONEDA/		;SPANISH
MES1B:	.WORD COINM+08
	.ASCIZ /MUENZE/	;GERMAN
;PLAYER (7)
MES1C:	.WORD COINM+12
	.ASCIZ /PLAYER/		;ENGLISH
MES1D:	.WORD COINM+12
	.ASCIZ /JOUEUR/		;FRENCH
MES1E:	.WORD COINM+12
	.ASCIZ /JUGADOR/	;SPANISH
MES1F:	.WORD COINM+12
	.ASCIZ /SPIELER/	;GERMAN
;ADD S TO PLAYERS (8)
MES20:	.WORD 0518		;ENG
	.ASCIZ	/S/
MES21:	.WORD 0518		;FR
	.ASCIZ	/S/
MES22:	.WORD 0519		;SPAN
	.ASCIZ	/ES/
MES23:	.BYTE 05,18,0		;GERMAN
;MISSES PER PLAYER (9)
MES24:	.BYTE	05,0E9
	.ASCIZ	/MISSES@PER@PLAYER/
MES25:	.BYTE	05,0E8			;FR
	.ASCIZ	/ERRORS@PAR@JOUEUR/
MES26:	.BYTE	05,0E8			;SPAN
	.ASCIZ	/YERROS@POR@JUGADOR/
MES27:	.BYTE	05,0E6			;GR
	.ASCIZ	/FEHLTREFFER@PRO@SPIELER/
;2X BONUS (OR SCORE)(A)
;NOTE:	THIS IS A SPECIAL MESSAGE AND DOES NOT CONTAIN
;	OUTPUT ADDRESSES AS THE FIRST WORD OF THE MESSAGE (ENGLISH ONLY)
MES28:  .BYTE 72
	.ASCIZ	/X@SCORE/
;BONUS FOR XXXXXX(B)
MES29:	.WORD 0625
	.ASCIZ	/EXTENDED@PLAY@FOR/
MES2A:	.WORD 0626
	.ASCIZ	/JUE@PROLONGE@DE/	;FRENCH
MES2B:	.WORD 0626
	.ASCIZ	/JUGADA@EXTRA@DE/	;SPAN
MES2C:	.WORD 0624
	.ASCIZ	/VERLAENGERTE@FUER/	;GERM
;(5)
;EXTRAS - NO LANGUAGE CHANGE
MES14:
MES15:
;BLANK LINE
MES16:	.BYTE -64.,40,0
MES17:
CKM3A:	.BYTE 55

	.PAGE
	.SBTTL POWER ON AND SELF-TEST
	.RADIX	16
START:	LDS	I,STKPTR	;SET STACK
	LDX	I,0FF		;CLEAR ALL RAM
	CLRB			;FLAG SHOWING START
	BRA	ST4
ST3:	LDAB	I,1
	STAA	E,ATTRACT	;SOUNDS OFF
	LDX	I,STRTIM-1	;CLEAR ALL BUT COIN AND HISCORE WORDS
ST4:	CLR	X,0
	DEX
	BNE	ST4
	LDAA	E,TSTSW
	ASLA			;TEST?
	BPL	DOTEST
2$:	STAA	E,IRQ		;RESET INTERRUPTS
	TSTB				;IS THIS A POWER-ON?
	BNE	ST2			;NOT IF NE
	LDAA	I,20
	STAA	D,HISCRH		;HIGH SCORE=2000 TO START
				;INITIALIZE OBJECTS & CLEAR SCREEN
	JSR	CLRSCR		;SCORE
ST2:	JSR	E,INIT
	LDX	I,SKDVB		;WRITE SKYDIVER
	STX	D,INWH		;SAVE INPUT LOCATION
	LDAA	I,8.
	LDX	I,LETTBL	;GET #, LETTER CONVERSION
1$:	LDAB	X,0
	INX
	STX	D,TIX
	LDX	D,INWH
	STAB	X,0		;OUTPUT BOTH BLACK & WHITE
	ORAB	I,40
	STAB	X,12
	INX
	STX	D,INWH
	LDX	D,TIX
	DECA
	BNE	1$
	LDAB	I,15.
	STAB	D,ATTYM		;ATTRACT TIMER
	LDS	I,STKPTR	;RESET STACK POINTER
	JMP	E,GAMSTR		;START MOVING THINGS
DOTEST:	STAA	E,WISTL1	;WISTLES OFF
	STAA	E,WISTL1+2
	STAA	E,ATTRACT+1	;ALLOW SOUNDS
	CLRA
	STAA	E,NONMI		;TURN OFF NMI'S
	LDX	I,07FF			;CLEAR RAM
1$:	STAA	X,0
	DEX
	BNE	1$
	LDX	I,0400			;DO 2102 RAM TEST
	COMA				;A=FF
2$:	STAA	X,0
	LDAB	X,1			;STILL 0?
	BNE	ERR2			;IF NO, ERROR
	CMPA	X,0			;HOLDING DATA?
	BNE	ERR			;IF NO, ERROR
	INX				;NEXT
	STAA	E,IRQ
	CPX	I,07FF			;END OF TEST?
	BNE	2$
	CLRB				;YES, SHOW NO ERRORS
	BRA	ERR2
ERR:	TAB				
	EORB	X,0			;LIGHT UP BAD BITS
ERR2:	CLR	E,SNDOUT
	LDAA	I,8.			;BAD BITS LIT
1$:	STAA	E,OCTVE		;GUESS HIGH FOR GOOD BIT
	LSRB				;GOOD?
	BCC	2$			;IF CC, YES
	STAA	E,OCTVE+1		;SET TO LOW
2$:	STAA	E,WISTL1+1		;WISTLE ON
	LDX	I,2000			;TIME ON DELAY
3$:	STAA	E,IRQ
	DEX
	BNE	3$
	STAA	E,WISTL1		;SOUND OFF
	LDX	I,4000
4$:	STAA	E,IRQ
	DEX
	BNE	4$			;TIME OFF DELAY
	DECA				;ANOTHER BIT?
	BNE	1$
	LDX	I,07FF			;CLEAR SCREEN NOW
5$:	CLR	X,0
	STAA	E,IRQ
	DEX
	BNE	5$
;
;END OF 2102 TEST, NOW TEST 6810
;
	LDAA	I,1			;GALLOP A 1 (GIDDY-UP)
6$:	LDX	I,-80			;MIKE ALBAUGH DID THIS
7$:	STAA	X,80			;CRUDE METHODS BUT EFFECTIVE
	CMPB	X,81			;HOLDING LAST VALUE?
	BNE	ERR3
	CMPA	X,80
	BNE	ERR3
	INX				;NEXT BYTE
	BNE	7$			;NOW YOU SEE WHY MIKE DID -80?
	STAA	X,80
	TAB				;STORE TO END ALSO
	ASLA				;NEXT BIT
	BCC	6$			;DONE?
	LDAA	I,15.			;RAM 0K. THIS IS THE O
	LDAB	I,11.			;AND THIS IS THE K
	BRA	EROT
ERR3:	LDAA	I,6			;CHIP F1 BAD, THIS IS THE F
	LDAB	I,31			;YOU GUESSED IT,  THIS IS THE 1
EROT:	STAA	E,0550			;OUT TO THE WORLD
	STAB	E,0551
ROMTST:	CLRA
	STAA	D,SNDOUT
	LDAB	I,30			;1 IS THE FIRST CHIP
	STAA	D,R0			;ERROR INDICATOR
	LDX	I,2800			;ROM TEST STARTS AT 2800
10$:	ADDA	X,0
	TST	E,IRQ
	INX
	CPX	I,2C00
	BNE	10$
	INCA
	BEQ	12$
	STAB	E,056F
	STAB	D,R0
12$:	CLRA
	INCB
	LDX	I,3000
1$:	ADDA	X,0
	TST	E,IRQ			;HEY POOCHIE, STAY AWAKE
	INX
	CPX	I,3400
	BNE	1$
	INCA				;0?
	BEQ	2$
	STAB	E,0570			;#1 OUT  FOR BAD ROM 1
	STAB	D,R0			;ERROR FLAG UP!!
2$:	CLRA				;JUST IN CASE
	INCB				;B=32 FOR #2
3$:	ADDA	X,0
	INX
	TST	E,IRQ
	CPX	I,3800
	BNE	3$
	INCA				;2ND 0?
	BEQ	4$
	STAB	E,0571
	STAB	D,R0			;NOTHING DIFFERENT THAN ABOVE
4$:	CLRA
	INCB
40$:	ADDA	X,0
	TST	E,IRQ
	INX
	CPX	I,3C00
	BNE	40$
	INCA
	BEQ	50$
	STAB	E,0572
	STAB	D,R0
50$:	CLRA
	INCB
51$:	ADDA	X,0
	TST	E,IRQ
	INX
	CPX	I,4000
	BNE	51$
	INCA
	BEQ	60$
	STAB	E,0573
	STAB	D,R0
60$:	CLRA
	INCB
	LDX	I,77FF
61$:	ADDA	X,1
	INX
	TST	E,IRQ
	CPX	I,7BFF
	BNE	61$
	INCA
	BEQ	70$
	STAB	E,0574
	STAB	D,R0
70$:	CLRA
	INCB
5$:	ADDA	X,1
	INX
	TST	E,IRQ
	CPX	I,7FFF
	BNE	5$
	INCA				;#3 GOOD?
	BEQ	6$
	STAB	E,0575			;#3 GOES OUT HERE
	STAB	D,R0
6$:	LDAB	D,R0			;ANY ERRORS?
	BNE	SWTST
	LDAA	I,15.			;WRITE OK
	LDAB	I,11.
	STAA	E,0570
	STAB	E,0571
SWTST:	STAA	E,STLITE+1		;ALL LAMPS ON
	STAA	E,STLITE+3
	STAA	E,JLITE1+1
	STAA	E,JLITE2+1
	LDAB	I,0FF
;GRAPHICS TEST
	TBA
	LDX	I,0420
1$:	STAA	X,0
	INX
	DECA
	BNE	1$
	JSR	LTSON
SWTST2:	STAA	E,WISTL1		;WISTLE OFF
	LDX	I,UP0			;BOTTOM OF SWITCHES
	CLRA
1$:	EORA	X,0
	INX				;XOR ALL SWITCHES
	CPX	I,LANGS+1
	BNE	1$
	TST	E,IRQ
	EORA	X,5			;SLAM SWITCH
;THE FOLLOWING WORKS BECAUSE HOWIE DELMAN AND MIKE ALBAUGH
;SAID IT WOULD..... ALL QUESTIONS TO THEM PLEASE
	ANDA	I,0C0
	ASLA				;XOR BITS 6&7
	BVC	22$			;V IS SET AS THE XOR OF BITS 6&7
	COMA
22$:	LSRA				;XOR TO BIT 0
	ABA				;COMPARE (?) TO OLD FLAG
	LSRA				;INTO CARRY
	BCC	23$
	COMB				;ALT STATE OF FLAG
	STAA	E,WISTL1+1		;BEEP ON
23$:	LDX	I,2000
24$:	TST	E,IRQ			;WATCH DOG PULSE
	DEX
	BNE	24$
	LDAA	E,DIAGS			;DIAG SELECTED?
	BMI	25$
	LDAA	E,DIAG
	CMPA	I,0BD			;IS DIAG OUT THERE?
	BNE	25$
	LDAA	E,DIAG+6		;MAKE SURE IT WASN'T A FLUKE
	CMPA	I,86
	BNE	25$
	JMP	E,DIAG			;DO DIAG  IF THERE
25$:	LDAA	E,TSTSW
	ASLA
	BPL	SWTST2
	JMP	E,START
FILR	=7FF8-.
	.REPT FILR
	.BYTE 0
	.ENDR
	.=7FF8
	.WORD START
	.WORD START
	.WORD NMI
	.WORD START
	.END
                                                                                               